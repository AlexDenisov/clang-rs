var searchIndex = {};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level example. Note that this struct is just for documentation purposes only, it must not be used outside this crate.",null,null],[17,"FLAG_A","","",null,null],[17,"FLAG_B","","",null,null],[17,"FLAG_C","","",null,null],[17,"FLAG_ABC","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",0,{"inputs":[{"name":"u32"}],"output":{"name":"flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",0,{"inputs":[{"name":"self"},{"name":"flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitor_assign","","Adds the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",0,{"inputs":[{"name":"t"}],"output":{"name":"flags"}}],[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[[3,"Flags"]]};
searchIndex["clang"] = {"doc":"A somewhat idiomatic Rust wrapper for libclang.","items":[[3,"Clang","clang","An empty type which prevents the use of this library from multiple threads simultaneously.",null,null],[3,"Entity","","An AST entity.",null,null],[3,"Index","","A collection of translation units.",null,null],[3,"ObjCAttributes","","Indicates which attributes were applied to an Objective-C property.",null,null],[12,"readonly","","Indicates use of the `readonly` attribute.",0,null],[12,"getter","","Indicates use of the `getter` attribute.",0,null],[12,"assign","","Indicates use of the `assign` attribute.",0,null],[12,"readwrite","","Indicates use of the `readwrite` attribute.",0,null],[12,"retain","","Indicates use of the `retain` attribute.",0,null],[12,"copy","","Indicates use of the `copy` attribute.",0,null],[12,"nonatomic","","Indicates use of the `nonatomic` attribute.",0,null],[12,"setter","","Indicates use of the `setter` attribute.",0,null],[12,"atomic","","Indicates use of the `atomic` attribute.",0,null],[12,"weak","","Indicates use of the `weak` attribute.",0,null],[12,"strong","","Indicates use of the `strong` attribute.",0,null],[12,"unsafe_retained","","Indicates use of the `unsafe_retained` attribute.",0,null],[12,"class","","Indicates use of the `class` attribute.",0,null],[3,"ObjCQualifiers","","Indicates which qualifiers were applied to an Objective-C method return or parameter type.",null,null],[12,"in_","","Indicates use of the `in` qualifier.",1,null],[12,"inout","","Indicates use of the `inout` qualifier.",1,null],[12,"out","","Indicates use of the `out` qualifier.",1,null],[12,"bycopy","","Indicates use of the `bycopy` qualifier.",1,null],[12,"byref","","Indicates use of the `byref` qualifier.",1,null],[12,"oneway","","Indicates use of the `oneway` qualifier.",1,null],[3,"Parser","","Parses translation units.",null,null],[3,"PlatformAvailability","","The availability of an AST entity on a particular platform.",null,null],[12,"platform","","The name of the platform.",2,null],[12,"unavailable","","Whether the AST entity is unavailable on the platform.",2,null],[12,"introduced","","The version of the platform in which this AST entity was introduced, if any.",2,null],[12,"deprecated","","The version of the platform in which this AST entity was deprecated, if any.",2,null],[12,"obsoleted","","The version of the platform in which this AST entity was obsoleted, if any.",2,null],[12,"message","","A message to display to users (e.g., replacement API suggestions).",2,null],[3,"ThreadOptions","","A set of options that determines which types of threads should use background priority.",null,null],[12,"editing","","Indicates whether threads creating for editing purposes should use background priority.",3,null],[12,"indexing","","Indicates whether threads creating for indexing purposes should use background priority.",3,null],[3,"TranslationUnit","","A preprocessed and parsed source file.",null,null],[3,"Type","","The type of an AST entity.",null,null],[3,"Unsaved","","The path to and unsaved contents of a previously existing file.",null,null],[3,"Usr","","A Unified Symbol Resolution (USR).",null,null],[12,"0","","",4,null],[3,"Version","","A version number in the form `x.y.z`.",null,null],[12,"x","","The `x` component of the version number.",5,null],[12,"y","","The `y` component of the version number.",5,null],[12,"z","","The `z` component of the version number.",5,null],[4,"AlignofError","","Indicates the error that prevented determining the alignment of a type.",null,null],[13,"Dependent","","The type is a dependent type.",6,null],[13,"Incomplete","","The type is an incomplete type.",6,null],[4,"OffsetofError","","Indicates the error that prevented determining the offset of a field in a record type.",null,null],[13,"Dependent","","The record type is a dependent type.",7,null],[13,"Incomplete","","The record type is an incomplete type.",7,null],[13,"Name","","The record type does not contain a field with the supplied name.",7,null],[13,"Parent","","The record type has an invalid parent declaration.",7,null],[4,"SaveError","","Indicates the type of error that prevented the saving of a translation unit to an AST file.",null,null],[13,"Errors","","Errors in the translation unit prevented saving.",8,null],[13,"Unknown","","An unknown error occurred.",8,null],[4,"SizeofError","","Indicates the error that prevented determining the size of a type.",null,null],[13,"Dependent","","The type is a dependent type.",9,null],[13,"Incomplete","","The type is an incomplete type.",9,null],[13,"VariableSize","","The type is a variable size type.",9,null],[4,"SourceError","","Indicates the type of error that prevented the loading of a translation unit from a source file.",null,null],[13,"AstDeserialization","","An error occurred while deserializing an AST file.",10,null],[13,"Crash","","`libclang` crashed.",10,null],[13,"Unknown","","An unknown error occurred.",10,null],[4,"Accessibility","","Indicates the accessibility of a declaration or base class specifier.",null,null],[13,"Private","","The declaration or base class specifier is private.",11,null],[13,"Protected","","The declaration or base class specifier is protected.",11,null],[13,"Public","","The declaration or base class specifier is public.",11,null],[4,"Availability","","Indicates the availability of an AST entity.",null,null],[13,"Available","","The entity is available.",12,null],[13,"Deprecated","","The entity is available but has been deprecated and any usage of it will be a warning.",12,null],[13,"Inaccessible","","The entity is available but is not accessible and any usage of it will be an error.",12,null],[13,"Unavailable","","The entity is not available and any usage of it will be an error.",12,null],[4,"CallingConvention","","Indicates the calling convention specified for a function type.",null,null],[13,"Unexposed","","The function type uses a calling convention that is not exposed via this interface.",13,null],[13,"Cdecl","","The function type uses the x86 `cdecl` calling convention.",13,null],[13,"Fastcall","","The function type uses the x86 `fastcall` calling convention.",13,null],[13,"Pascal","","The function type uses the x86 `pascal` calling convention.",13,null],[13,"Stdcall","","The function type uses the x86 `stdcall` calling convention.",13,null],[13,"Thiscall","","The function type uses the x86 `thiscall` calling convention.",13,null],[13,"Vectorcall","","The function type uses the x86 `vectorcall` calling convention.",13,null],[13,"Swift","","The function type uses the calling convention for the Swift programming language.",13,null],[13,"PreserveMost","","The function type uses a calling convention that perserves most registers.",13,null],[13,"PreserveAll","","The function type uses a calling convention that preverses nearly all registers.",13,null],[13,"Aapcs","","The function type uses the ARM AACPS calling convention.",13,null],[13,"AapcsVfp","","The function type uses the ARM AACPS-VFP calling convention.",13,null],[13,"IntelOcl","","The function type uses the calling convention for Intel OpenCL built-ins.",13,null],[13,"RegCall","","The function type uses a calling convention that passes as many values in registers as possible.",13,null],[13,"SysV64","","The function type uses the x64 C calling convention as specified in the System V ABI.",13,null],[13,"Win64","","The function type uses the x64 C calling convention as implemented on Windows.",13,null],[4,"EntityKind","","Indicates the categorization of an AST entity.",null,null],[13,"UnexposedDecl","","A declaration whose specific type is not exposed via this interface.",14,null],[13,"StructDecl","","A C or C++ struct.",14,null],[13,"UnionDecl","","A C or C++ union.",14,null],[13,"ClassDecl","","A C++ class.",14,null],[13,"EnumDecl","","An enum.",14,null],[13,"FieldDecl","","A C field or C++ non-static data member in a struct, union, or class.",14,null],[13,"EnumConstantDecl","","An enum constant.",14,null],[13,"FunctionDecl","","A function.",14,null],[13,"VarDecl","","A variable.",14,null],[13,"ParmDecl","","A parameter.",14,null],[13,"ObjCInterfaceDecl","","An Objective-C `@interface`.",14,null],[13,"ObjCCategoryDecl","","An Objective-C `@interface` for a category.",14,null],[13,"ObjCProtocolDecl","","An Objective-C `@protocol` declaration.",14,null],[13,"ObjCPropertyDecl","","An Objective-C `@property` declaration.",14,null],[13,"ObjCIvarDecl","","An Objective-C instance variable.",14,null],[13,"ObjCInstanceMethodDecl","","An Objective-C instance method.",14,null],[13,"ObjCClassMethodDecl","","An Objective-C class method.",14,null],[13,"ObjCImplementationDecl","","An Objective-C `@implementation`.",14,null],[13,"ObjCCategoryImplDecl","","An Objective-C `@implementation` for a category.",14,null],[13,"TypedefDecl","","A typedef.",14,null],[13,"Method","","A C++ method.",14,null],[13,"Namespace","","A C++ namespace.",14,null],[13,"LinkageSpec","","A linkage specification (e.g., `extern \"C\"`).",14,null],[13,"Constructor","","A C++ constructor.",14,null],[13,"Destructor","","A C++ destructor.",14,null],[13,"ConversionFunction","","A C++ conversion function.",14,null],[13,"TemplateTypeParameter","","A C++ template type parameter.",14,null],[13,"NonTypeTemplateParameter","","A C++ template non-type parameter.",14,null],[13,"TemplateTemplateParameter","","A C++ template template parameter.",14,null],[13,"FunctionTemplate","","A C++ function template.",14,null],[13,"ClassTemplate","","A C++ class template.",14,null],[13,"ClassTemplatePartialSpecialization","","A C++ class template partial specialization.",14,null],[13,"NamespaceAlias","","A C++ namespace alias declaration.",14,null],[13,"UsingDirective","","A C++ using directive.",14,null],[13,"UsingDeclaration","","A C++ using declaration.",14,null],[13,"TypeAliasDecl","","A C++ type alias declaration.",14,null],[13,"ObjCSynthesizeDecl","","An Objective-C `@synthesize` definition.",14,null],[13,"ObjCDynamicDecl","","An Objective-C `@dynamic` definition.",14,null],[13,"AccessSpecifier","","An access specifier.",14,null],[13,"ObjCSuperClassRef","","A reference to a super class in Objective-C.",14,null],[13,"ObjCProtocolRef","","A reference to a protocol in Objective-C.",14,null],[13,"ObjCClassRef","","A reference to a class in Objective-C.",14,null],[13,"TypeRef","","A reference to a type declaration.",14,null],[13,"BaseSpecifier","","A base class specifier.",14,null],[13,"TemplateRef","","A reference to a class template, function template, template template parameter, or class template partial specialization.",14,null],[13,"NamespaceRef","","A reference to a namespace or namespace alias.",14,null],[13,"MemberRef","","A reference to a member of a struct, union, or class that occurs in some non-expression context.",14,null],[13,"LabelRef","","A reference to a labeled statement.",14,null],[13,"OverloadedDeclRef","","A reference to a set of overloaded functions or function templates that has not yet been resolved to a specific function or function template.",14,null],[13,"VariableRef","","A reference to a variable that occurs in some non-expression context.",14,null],[13,"UnexposedExpr","","An expression whose specific kind is not exposed via this interface.",14,null],[13,"DeclRefExpr","","An expression that refers to some value declaration, such as a function or enumerator.",14,null],[13,"MemberRefExpr","","An expression that refers to the member of a struct, union, or class.",14,null],[13,"CallExpr","","An expression that calls a function.",14,null],[13,"ObjCMessageExpr","","An expression that sends a message to an Objective-C object or class.",14,null],[13,"BlockExpr","","An expression that represents a block literal.",14,null],[13,"IntegerLiteral","","An integer literal.",14,null],[13,"FloatingLiteral","","A floating point number literal.",14,null],[13,"ImaginaryLiteral","","An imaginary number literal.",14,null],[13,"StringLiteral","","A string literal.",14,null],[13,"CharacterLiteral","","A character literal.",14,null],[13,"ParenExpr","","A parenthesized expression.",14,null],[13,"UnaryOperator","","Any unary expression other than `sizeof` and `alignof`.",14,null],[13,"ArraySubscriptExpr","","An array subscript expression (`[C99 6.5.2.1]`).",14,null],[13,"BinaryOperator","","A built-in binary expression (e.g., `x + y`).",14,null],[13,"CompoundAssignOperator","","A compound assignment expression (e.g., `x += y`).",14,null],[13,"ConditionalOperator","","A ternary expression.",14,null],[13,"CStyleCastExpr","","An explicit cast in C or a C-style cast in C++.",14,null],[13,"CompoundLiteralExpr","","A compound literal expression (`[C99 6.5.2.5]`).",14,null],[13,"InitListExpr","","A C or C++ initializer list.",14,null],[13,"AddrLabelExpr","","A GNU address of label expression.",14,null],[13,"StmtExpr","","A GNU statement expression.",14,null],[13,"GenericSelectionExpr","","A C11 generic selection expression.",14,null],[13,"GNUNullExpr","","A GNU `__null` expression.",14,null],[13,"StaticCastExpr","","A C++ `static_cast<>` expression.",14,null],[13,"DynamicCastExpr","","A C++ `dynamic_cast<>` expression.",14,null],[13,"ReinterpretCastExpr","","A C++ `reinterpret_cast<>` expression.",14,null],[13,"ConstCastExpr","","A C++ `const_cast<>` expression.",14,null],[13,"FunctionalCastExpr","","A C++ cast that uses \"function\" notation (e.g., `int(0.5)`).",14,null],[13,"TypeidExpr","","A C++ `typeid` expression.",14,null],[13,"BoolLiteralExpr","","A C++ boolean literal.",14,null],[13,"NullPtrLiteralExpr","","A C++ `nullptr` expression.",14,null],[13,"ThisExpr","","A C++ `this` expression.",14,null],[13,"ThrowExpr","","A C++ `throw` expression.",14,null],[13,"NewExpr","","A C++ `new` expression.",14,null],[13,"DeleteExpr","","A C++ `delete` expression.",14,null],[13,"UnaryExpr","","A unary expression.",14,null],[13,"ObjCStringLiteral","","An Objective-C string literal.",14,null],[13,"ObjCEncodeExpr","","An Objective-C `@encode` expression.",14,null],[13,"ObjCSelectorExpr","","An Objective-C `@selector` expression.",14,null],[13,"ObjCProtocolExpr","","An Objective-C `@protocol` expression.",14,null],[13,"ObjCBridgedCastExpr","","An Objective-C bridged cast expression.",14,null],[13,"PackExpansionExpr","","A C++11 parameter pack expansion expression.",14,null],[13,"SizeOfPackExpr","","A C++11 `sizeof...` expression.",14,null],[13,"LambdaExpr","","A C++11 lambda expression.",14,null],[13,"ObjCBoolLiteralExpr","","An Objective-C boolean literal.",14,null],[13,"ObjCSelfExpr","","An Objective-C `self` expression.",14,null],[13,"OmpArraySectionExpr","","An OpenMP array section expression.",14,null],[13,"ObjCAvailabilityCheckExpr","","An Objective-C availability check expression (e.g., `@available(macos 10.10, *)`).",14,null],[13,"UnexposedStmt","","A statement whose specific kind is not exposed via this interface.",14,null],[13,"LabelStmt","","A labelled statement in a function.",14,null],[13,"CompoundStmt","","A group of statements (e.g., a function body).",14,null],[13,"CaseStmt","","A `case` statement.",14,null],[13,"DefaultStmt","","A `default` statement.",14,null],[13,"IfStmt","","An `if` statement.",14,null],[13,"SwitchStmt","","A `switch` statement.",14,null],[13,"WhileStmt","","A `while` statement.",14,null],[13,"DoStmt","","A `do` statement.",14,null],[13,"ForStmt","","A `for` statement.",14,null],[13,"GotoStmt","","A `goto` statement.",14,null],[13,"IndirectGotoStmt","","An indirect `goto` statement.",14,null],[13,"ContinueStmt","","A `continue` statement.",14,null],[13,"BreakStmt","","A `break` statement.",14,null],[13,"ReturnStmt","","A `return` statement.",14,null],[13,"AsmStmt","","An inline assembly statement.",14,null],[13,"ObjCAtTryStmt","","An Objective-C `@try`-`@catch`-`@finally` statement.",14,null],[13,"ObjCAtCatchStmt","","An Objective-C `@catch` statement.",14,null],[13,"ObjCAtFinallyStmt","","An Objective-C `@finally` statement.",14,null],[13,"ObjCAtThrowStmt","","An Objective-C `@throw` statement.",14,null],[13,"ObjCAtSynchronizedStmt","","An Objective-C `@synchronized` statement.",14,null],[13,"ObjCAutoreleasePoolStmt","","An Objective-C autorelease pool statement.",14,null],[13,"ObjCForCollectionStmt","","An Objective-C collection statement.",14,null],[13,"CatchStmt","","A C++ catch statement.",14,null],[13,"TryStmt","","A C++ try statement.",14,null],[13,"ForRangeStmt","","A C++11 range-based for statement.",14,null],[13,"SehTryStmt","","A Windows Structured Exception Handling `__try` statement.",14,null],[13,"SehExceptStmt","","A Windows Structured Exception Handling `__except` statement.",14,null],[13,"SehFinallyStmt","","A Windows Structured Exception Handling `__finally` statement.",14,null],[13,"SehLeaveStmt","","A Windows Structured Exception Handling `__leave` statement.",14,null],[13,"MsAsmStmt","","A Microsoft inline assembly statement.",14,null],[13,"NullStmt","","A null statement.",14,null],[13,"DeclStmt","","An adaptor for mixing declarations with statements and expressions.",14,null],[13,"OmpParallelDirective","","An OpenMP parallel directive.",14,null],[13,"OmpSimdDirective","","An OpenMP SIMD directive.",14,null],[13,"OmpForDirective","","An OpenMP for directive.",14,null],[13,"OmpSectionsDirective","","An OpenMP sections directive.",14,null],[13,"OmpSectionDirective","","An OpenMP section directive.",14,null],[13,"OmpSingleDirective","","An OpenMP single directive.",14,null],[13,"OmpParallelForDirective","","An OpenMP parallel for directive.",14,null],[13,"OmpParallelSectionsDirective","","An OpenMP parallel sections directive.",14,null],[13,"OmpTaskDirective","","An OpenMP task directive.",14,null],[13,"OmpMasterDirective","","An OpenMP master directive.",14,null],[13,"OmpCriticalDirective","","An OpenMP critical directive.",14,null],[13,"OmpTaskyieldDirective","","An OpenMP taskyield directive.",14,null],[13,"OmpBarrierDirective","","An OpenMP barrier directive.",14,null],[13,"OmpTaskwaitDirective","","An OpenMP taskwait directive.",14,null],[13,"OmpFlushDirective","","An OpenMP flush directive.",14,null],[13,"OmpOrderedDirective","","An OpenMP ordered directive.",14,null],[13,"OmpAtomicDirective","","An OpenMP atomic directive.",14,null],[13,"OmpForSimdDirective","","An OpenMP for SIMD directive.",14,null],[13,"OmpParallelForSimdDirective","","An OpenMP parallel for SIMD directive.",14,null],[13,"OmpTargetDirective","","An OpenMP target directive.",14,null],[13,"OmpTeamsDirective","","An OpenMP teams directive.",14,null],[13,"OmpTaskgroupDirective","","An OpenMP taskgroup directive.",14,null],[13,"OmpCancellationPointDirective","","An OpenMP cancellation point directive.",14,null],[13,"OmpCancelDirective","","An OpenMP cancel directive.",14,null],[13,"OmpTargetDataDirective","","An OpenMP target data directive.",14,null],[13,"OmpTaskLoopDirective","","An OpenMP task loop directive.",14,null],[13,"OmpTaskLoopSimdDirective","","An OpenMP task loop SIMD directive.",14,null],[13,"OmpDistributeDirective","","An OpenMP distribute directive.",14,null],[13,"OmpTargetEnterDataDirective","","An OpenMP target enter data directive.",14,null],[13,"OmpTargetExitDataDirective","","An OpenMP target exit data directive.",14,null],[13,"OmpTargetParallelDirective","","An OpenMP target parallel directive.",14,null],[13,"OmpTargetParallelForDirective","","An OpenMP target parallel for directive.",14,null],[13,"OmpTargetUpdateDirective","","An OpenMP target update directive.",14,null],[13,"OmpDistributeParallelForDirective","","An OpenMP distribute parallel for directive.",14,null],[13,"OmpDistributeParallelForSimdDirective","","An OpenMP distribute parallel for SIMD directive.",14,null],[13,"OmpDistributeSimdDirective","","An OpenMP distribute SIMD directive.",14,null],[13,"OmpTargetParallelForSimdDirective","","An OpenMP target parallel for SIMD directive.",14,null],[13,"OmpTargetSimdDirective","","An OpenMP target SIMD directive.",14,null],[13,"OmpTeamsDistributeDirective","","An OpenMP teams distribute directive.",14,null],[13,"OmpTeamsDistributeSimdDirective","","An OpenMP teams distribute SIMD directive.",14,null],[13,"OmpTeamsDistributeParallelForSimdDirective","","An OpenMP teams distribute parallel for SIMD directive.",14,null],[13,"OmpTeamsDistributeParallelForDirective","","An OpenMP teams distribute parallel for directive.",14,null],[13,"OmpTargetTeamsDirective","","An OpenMP target teams directive.",14,null],[13,"OmpTargetTeamsDistributeDirective","","An OpenMP target teams distribute directive.",14,null],[13,"OmpTargetTeamsDistributeParallelForDirective","","An OpenMP target teams distribute parallel for directive.",14,null],[13,"OmpTargetTeamsDistributeParallelForSimdDirective","","An OpenMP target teams distribute parallel for SIMD directive.",14,null],[13,"OmpTargetTeamsDistributeSimdDirective","","An OpenMP target teams distribute SIMD directive.",14,null],[13,"TranslationUnit","","The top-level AST entity which acts as the root for the other entitys.",14,null],[13,"UnexposedAttr","","An attribute whose specific kind is not exposed via this interface.",14,null],[13,"IbActionAttr","","An attribute applied to an Objective-C IBAction.",14,null],[13,"IbOutletAttr","","An attribute applied to an Objective-C IBOutlet.",14,null],[13,"IbOutletCollectionAttr","","An attribute applied to an Objective-C IBOutletCollection.",14,null],[13,"FinalAttr","","The `final` attribute.",14,null],[13,"OverrideAttr","","The `override` attribute.",14,null],[13,"AnnotateAttr","","An annotation attribute.",14,null],[13,"AsmLabelAttr","","An ASM label attribute.",14,null],[13,"PackedAttr","","An attribute that requests for packed records (e.g., `__attribute__ ((__packed__))`).",14,null],[13,"PureAttr","","An attribute that asserts a function has no side effects (e.g., `__attribute__((pure))`).",14,null],[13,"ConstAttr","","The `const` attribute.",14,null],[13,"NoDuplicateAttr","","An attribute that allows calls to a function to be duplicated by the optimized (e.g., `__attribute__((noduplicate))`).",14,null],[13,"CudaConstantAttr","","A CUDA constant attribute.",14,null],[13,"CudaDeviceAttr","","A CUDA device attribute.",14,null],[13,"CudaGlobalAttr","","A CUDA global attribute.",14,null],[13,"CudaHostAttr","","A CUDA host attribute.",14,null],[13,"CudaSharedAttr","","A CUDA shared attribute.",14,null],[13,"VisibilityAttr","","A linker visibility attribute.",14,null],[13,"DllExport","","A MSVC DLL export attribute.",14,null],[13,"DllImport","","A MSVC DLL import attribute.",14,null],[13,"PreprocessingDirective","","A preprocessing directive.",14,null],[13,"MacroDefinition","","A macro definition.",14,null],[13,"MacroExpansion","","A macro expansion.",14,null],[13,"InclusionDirective","","An inclusion directive.",14,null],[13,"ModuleImportDecl","","A module import declaration.",14,null],[13,"TypeAliasTemplateDecl","","A C++11 alias template declaration (e.g., `template <typename T> using M = std::map<T, T>`).",14,null],[13,"StaticAssert","","A `static_assert` node.",14,null],[13,"FriendDecl","","A friend declaration.",14,null],[13,"OverloadCandidate","","A single overload in a set of overloads.",14,null],[4,"EntityVisitResult","","Indicates how a entity visitation should proceed.",null,null],[13,"Break","","Do not continue visiting entities.",15,null],[13,"Continue","","Continue visiting sibling entities iteratively, skipping child entities.",15,null],[13,"Recurse","","Continue visiting sibling and child entities recursively, children first.",15,null],[4,"EvaluationResult","","The result of evaluating an expression.",null,null],[13,"Unexposed","","An evaluation result whose specific type is not exposed via this interface.",16,null],[13,"SignedInteger","","A signed integer evaluation result.",16,null],[13,"UnsignedInteger","","An unsigned integer evaluation result.",16,null],[13,"Float","","A floating point number evaluation result.",16,null],[13,"String","","A string literal evaluation result.",16,null],[13,"ObjCString","","An Objective-C string literal evaluation result.",16,null],[13,"CFString","","An Objective-C `CFString` evaluation result.",16,null],[13,"Other","","Any other evaluation result whose value can be represented by a string.",16,null],[4,"Language","","Indicates the language used by a declaration.",null,null],[13,"C","","The declaration uses the C programming language.",17,null],[13,"Cpp","","The declaration uses the C++ programming language.",17,null],[13,"ObjectiveC","","The declaration uses the Objective-C programming language.",17,null],[13,"Swift","","The declaration uses the Swift programming language.",17,null],[4,"Linkage","","Indicates the linkage of an AST entity.",null,null],[13,"Automatic","","The AST entity has automatic storage (e.g., variables or parameters).",18,null],[13,"Internal","","The AST entity is a static variable or static function.",18,null],[13,"External","","The AST entity has external linkage.",18,null],[13,"UniqueExternal","","The AST entity has external linkage and lives in a C++ anonymous namespace.",18,null],[4,"MemoryUsage","","Indicates the usage category of a quantity of memory.",null,null],[13,"Ast","","Expressions, declarations, and types.",19,null],[13,"AstSideTables","","Various tables used by the AST.",19,null],[13,"ExternalAstSourceMalloc","","Memory allocated with `malloc` for external AST sources.",19,null],[13,"ExternalAstSourceMMap","","Memory allocated with `mmap` for external AST sources.",19,null],[13,"GlobalCodeCompletionResults","","Cached global code completion results.",19,null],[13,"Identifiers","","Identifiers.",19,null],[13,"PreprocessingRecord","","The preprocessing record.",19,null],[13,"Preprocessor","","Memory allocated with `malloc` for the preprocessor.",19,null],[13,"PreprocessorHeaderSearch","","Header search tables.",19,null],[13,"Selectors","","Selectors.",19,null],[13,"SourceManagerContentCache","","The content cache used by the source manager.",19,null],[13,"SourceManagerDataStructures","","Data structures used by the source manager.",19,null],[13,"SourceManagerMalloc","","Memory allocated with `malloc` for the source manager.",19,null],[13,"SourceManagerMMap","","Memory allocated with `mmap` for the source manager.",19,null],[4,"RefQualifier","","Indicates the ref qualifier of a C++ function or method type.",null,null],[13,"LValue","","The function or method has an l-value ref qualifier (`&`).",20,null],[13,"RValue","","The function or method has an r-value ref qualifier (`&&`).",20,null],[4,"StorageClass","","Indicates the storage class of a declaration.",null,null],[13,"None","","The declaration does not specifiy a storage duration and therefore has an automatic storage duration.",21,null],[13,"Auto","","The declaration specifies an automatic storage duration.",21,null],[13,"Register","","The declaration specifies an automatic storage duration and that it should be stored in a CPU register",21,null],[13,"Static","","The declaration specifies a static storage duration and internal linkage.",21,null],[13,"Extern","","The declaration specifies a static storage duration and external linkage.",21,null],[13,"PrivateExtern","","The declaration specifies a static storage duration and external linkage but is not accessible outside the containing translation unit.",21,null],[13,"OpenClWorkGroupLocal","","The declaration specifies a storage duration related to an OpenCL work group.",21,null],[4,"TemplateArgument","","An argument to a template function specialization.",null,null],[13,"Declaration","","A declaration for a pointer, reference, or member pointer non-type template parameter.",22,null],[13,"Expression","","An expression that has not yet been resolved",22,null],[13,"Null","","An empty template argument (e.g., one that has not yet been deduced).",22,null],[13,"Nullptr","","A null pointer or null member pointer provided for a non-type template parameter.",22,null],[13,"Pack","","A parameter pack.",22,null],[13,"Template","","A name for a template provided for a template template parameter.",22,null],[13,"TemplateExpansion","","A pack expansion of a name for a template provided for a template template parameter.",22,null],[13,"Integral","","An integer.",22,null],[13,"Type","","A type.",22,null],[4,"TypeKind","","Indicates the categorization of a type.",null,null],[13,"Unexposed","","A type whose specific kind is not exposed via this interface.",23,null],[13,"Void","","`void`",23,null],[13,"Bool","","`bool` (C++) or `_Bool` (C99)",23,null],[13,"CharS","","The `char` type when it is signed by default.",23,null],[13,"CharU","","The `char` type when it is unsigned by default.",23,null],[13,"SChar","","`signed char`",23,null],[13,"UChar","","`unsigned char`",23,null],[13,"WChar","","`wchar_t`",23,null],[13,"Char16","","`char16_t`",23,null],[13,"Char32","","`char32_t`",23,null],[13,"Short","","`short`",23,null],[13,"UShort","","`unsigned short`",23,null],[13,"Int","","`int`",23,null],[13,"UInt","","`unsigned int`",23,null],[13,"Long","","`long`",23,null],[13,"ULong","","`unsigned long`",23,null],[13,"LongLong","","`long long`",23,null],[13,"ULongLong","","`unsigned long long`",23,null],[13,"Int128","","`__int128_t`",23,null],[13,"UInt128","","`__uint128_t`",23,null],[13,"Half","","A half-precision floating point type.",23,null],[13,"Float","","`float`",23,null],[13,"Double","","`double`",23,null],[13,"LongDouble","","`long double`",23,null],[13,"Nullptr","","`nullptr_t` (C++11)",23,null],[13,"Complex","","A C99 complex type (e.g., `_Complex float`).",23,null],[13,"Dependent","","An unknown dependent type.",23,null],[13,"Overload","","The type of an unresolved overload set.",23,null],[13,"ObjCId","","`id` (Objective-C)",23,null],[13,"ObjCClass","","`Class` (Objective-C)",23,null],[13,"ObjCSel","","`SEL` (Objective-C)",23,null],[13,"Float128","","`__float128`",23,null],[13,"ObjCInterface","","An Objective-C interface type.",23,null],[13,"ObjCObjectPointer","","An Objective-C pointer to object type.",23,null],[13,"Pointer","","A pointer type.",23,null],[13,"BlockPointer","","A block pointer type (e.g., `void (^)(int)`).",23,null],[13,"MemberPointer","","A pointer to a record member type.",23,null],[13,"LValueReference","","An l-value reference (e.g. `int&`).",23,null],[13,"RValueReference","","An r-value reference (e.g. `int&&`).",23,null],[13,"Enum","","An enum type.",23,null],[13,"Record","","A record type such as a struct or a class.",23,null],[13,"Typedef","","A typedef.",23,null],[13,"FunctionPrototype","","A function prototype with parameter type information (e.g., `void foo(int)`).",23,null],[13,"FunctionNoPrototype","","A function prototype without parameter type information (e.g., `void foo()`).",23,null],[13,"ConstantArray","","An array type with a specified size that is an integer constant expression.",23,null],[13,"DependentSizedArray","","An array type with a specified size that is a dependent value.",23,null],[13,"IncompleteArray","","An array type without a specified size.",23,null],[13,"VariableArray","","An array type with a specified size that is not an integer constant expression.",23,null],[13,"Vector","","A GCC generic vector type.",23,null],[13,"Auto","","A C++11 `decltype(auto)` type.",23,null],[13,"Elaborated","","A type that was referred to using an elaborated type keyword (e.g., `struct S`).",23,null],[13,"Pipe","","An OpenCL pipe type.",23,null],[13,"OCLImage1dRO","","An OpenCL image type.",23,null],[13,"OCLImage1dArrayRO","","An OpenCL image type.",23,null],[13,"OCLImage1dBufferRO","","An OpenCL image type.",23,null],[13,"OCLImage2dRO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayRO","","An OpenCL image type.",23,null],[13,"OCLImage2dDepthRO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayDepthRO","","An OpenCL image type.",23,null],[13,"OCLImage2dMSAARO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayMSAARO","","An OpenCL image type.",23,null],[13,"OCLImage2dMSAADepthRO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayMSAADepthRO","","An OpenCL image type.",23,null],[13,"OCLImage3dRO","","An OpenCL image type.",23,null],[13,"OCLImage1dWO","","An OpenCL image type.",23,null],[13,"OCLImage1dArrayWO","","An OpenCL image type.",23,null],[13,"OCLImage1dBufferWO","","An OpenCL image type.",23,null],[13,"OCLImage2dWO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayWO","","An OpenCL image type.",23,null],[13,"OCLImage2dDepthWO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayDepthWO","","An OpenCL image type.",23,null],[13,"OCLImage2dMSAAWO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayMSAAWO","","An OpenCL image type.",23,null],[13,"OCLImage2dMSAADepthWO","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayMSAADepthWO","","An OpenCL image type.",23,null],[13,"OCLImage3dWO","","An OpenCL image type.",23,null],[13,"OCLImage1dRW","","An OpenCL image type.",23,null],[13,"OCLImage1dArrayRW","","An OpenCL image type.",23,null],[13,"OCLImage1dBufferRW","","An OpenCL image type.",23,null],[13,"OCLImage2dRW","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayRW","","An OpenCL image type.",23,null],[13,"OCLImage2dDepthRW","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayDepthRW","","An OpenCL image type.",23,null],[13,"OCLImage2dMSAARW","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayMSAARW","","An OpenCL image type.",23,null],[13,"OCLImage2dMSAADepthRW","","An OpenCL image type.",23,null],[13,"OCLImage2dArrayMSAADepthRW","","An OpenCL image type.",23,null],[13,"OCLImage3dRW","","An OpenCL image type.",23,null],[13,"OCLSampler","","An OpenCL sampler type.",23,null],[13,"OCLEvent","","An OpenCL event type.",23,null],[13,"OCLQueue","","An OpenCL queue type.",23,null],[13,"OCLReserveID","","An OpenCL reserve ID type.",23,null],[4,"Visibility","","Indicates the linker visibility of an AST element.",null,null],[13,"Default","","The AST element can be seen by the linker.",24,null],[13,"Hidden","","The AST element cannot be seen by the linker.",24,null],[13,"Protected","","The AST element can be seen by the linker but resolves to a symbol inside this object.",24,null],[5,"get_version","","Returns the version string for the version of `libclang` in use.",null,{"inputs":[],"output":{"name":"string"}}],[0,"completion","","Code completion.",null,null],[3,"Completer","clang::completion","Runs code completion.",null,null],[3,"CompletionContext","","Indicates which types of results were included in a set of code completion results.",null,null],[12,"all_types","","Indicates whether all possible types were included.",25,null],[12,"all_values","","Indicates whether all possible values were included.",25,null],[12,"class_type_values","","Indicates whether values that resolve to C++ class types were included.",25,null],[12,"dot_members","","Indicates whether the members of a record that are accessed with the dot operator were included.",25,null],[12,"arrow_members","","Indicates whether the members of a record that are accessed with the arrow operator were included.",25,null],[12,"enum_tags","","Indicates whether enum tags were included.",25,null],[12,"union_tags","","Indicates whether union tags were included.",25,null],[12,"struct_tags","","Indicates whether struct tags were included.",25,null],[12,"class_names","","Indicates whether C++ class names were included.",25,null],[12,"namespaces","","Indicates whether C++ namespaces and namespace aliases were included.",25,null],[12,"nested_name_specifiers","","Indicates whether C++ nested name specifiers were included.",25,null],[12,"macro_names","","Indicates whether macro names were included.",25,null],[12,"natural_language","","Indicates whether natural language results were included.",25,null],[12,"objc_object_values","","Indicates whether values that resolve to Objective-C objects were included.",25,null],[12,"objc_selector_values","","Indicates whether values that resolve to Objective-C selectors were included.",25,null],[12,"objc_property_members","","Indicates whether the properties of an Objective-C object that are accessed with the dot operator were included.",25,null],[12,"objc_interfaces","","Indicates whether Objective-C interfaces were included.",25,null],[12,"objc_protocols","","Indicates whether Objective-C protocols were included.",25,null],[12,"objc_categories","","Indicates whether Objective-C categories were included.",25,null],[12,"objc_instance_messages","","Indicates whether Objective-C instance messages were included.",25,null],[12,"objc_class_messages","","Indicates whether Objective-C class messages were included.",25,null],[12,"objc_selector_names","","Indicates whether Objective-C selector names were included.",25,null],[3,"CompletionResult","","A code completion result.",null,null],[12,"kind","","The categorization of the AST entity this code completion result produces.",26,null],[12,"string","","The completion string for this code completion result.",26,null],[3,"CompletionResults","","A set of code completion results.",null,null],[3,"CompletionString","","A semantic string that describes a code completion result.",null,null],[4,"CompletionChunk","","A piece of a code completion string.",null,null],[13,"Colon","","A colon (`':'`).",27,null],[13,"Comma","","A comma (`','`).",27,null],[13,"Equals","","An equals sign (`'='`).",27,null],[13,"Semicolon","","A semicolon (`';'`).",27,null],[13,"LeftAngleBracket","","A left angle bracket (`'<'`).",27,null],[13,"RightAngleBracket","","A right angle bracket (`'>'`).",27,null],[13,"LeftBrace","","A left brace (`'{'`).",27,null],[13,"RightBrace","","A right brace (`'}'`).",27,null],[13,"LeftParenthesis","","A left parentesis (`'('`)).",27,null],[13,"RightParenthesis","","A right parenthesis (`')'`).",27,null],[13,"LeftSquareBracket","","A left square bracket (`'['`).",27,null],[13,"RightSquareBracket","","A right square bracket (`']'`).",27,null],[13,"HorizontalSpace","","Horizontal space (e.g., `' '`).",27,null],[13,"VerticalSpace","","Vertical space (e.g., `'\\n'`).",27,null],[13,"CurrentParameter","","Text that describes the current parameter when code completion was run on a function call, message send, or template specialization.",27,null],[13,"Informative","","Informative text that should be displayed but not inserted as part of the template.",27,null],[13,"Placeholder","","Text that should be replaced by the user.",27,null],[13,"ResultType","","Text that specifies the result type of the containing result.",27,null],[13,"Text","","Text that should be inserted.",27,null],[13,"TypedText","","Text that the user would be expected to type to get the containing code completion result.",27,null],[13,"Optional","","An optional piece that could be part of the template but is not required.",27,null],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"completionchunk"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"completionchunk"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"completionchunk"}],"output":{"name":"bool"}}],[11,"get_text","","Returns the text associated with this completion chunk if this chunk is not optional.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_optional","","Returns whether this completion chunk is optional.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"completer"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"macros","","Sets whether macros will be included in code completion results.",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"completer"}}],[11,"code_patterns","","Sets whether code patterns (e.g., for loops) will be included in code completion results.",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"completer"}}],[11,"briefs","","Sets whether documentation comment briefs will be included in code completion results.",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"completer"}}],[11,"unsaved","","Sets the unsaved files to use.",28,null],[11,"complete","","Runs code completion.",28,{"inputs":[{"name":"self"}],"output":{"name":"completionresults"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"completioncontext"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"completioncontext"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"completioncontext"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"from","","",25,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"completioncontext"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"completionresult"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"completionresult"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"completionresult"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"self"},{"name":"completionresult"}],"output":{"name":"option"}}],[11,"cmp","","",26,{"inputs":[{"name":"self"},{"name":"completionresult"}],"output":{"name":"ordering"}}],[11,"get_diagnostics","","Returns the diagnostics that were produced prior to the code completion context for this set of code completion results.",29,{"inputs":[{"name":"self"},{"name":"translationunit"}],"output":{"name":"vec"}}],[11,"get_context","","Returns the code completion context for this set of code completion results, if any.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_container_kind","","Returns the categorization of the entity that contains the code completion context for this set of code completion results and whether that entity is incomplete, if applicable.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_selector","","Returns the selector or partial selector that has been entered this far for the Objective-C message send context for this set of code completion results.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_usr","","Returns the USR for the entity that contains the code completion context for this set of code completion results, if applicable.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_results","","Returns the code completion results in this set of code completion results.",29,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"drop","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"completionstring"}}],[11,"get_priority","","Returns an integer that represents how likely a user is to select this completion string as determined by internal heuristics. Smaller values indicate higher priorities.",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_annotations","","Returns the annotations associated with this completion string.",30,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_availability","","Returns the availability of this completion string.",30,{"inputs":[{"name":"self"}],"output":{"name":"availability"}}],[11,"get_comment_brief","","Returns the documentation comment brief associated with the declaration this completion string refers to, if applicable.",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_parent_name","","Returns the name of the semantic parent of the declaration this completion string refers to, if applicable.",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_typed_text","","Returns the text of the typed text chunk for this completion string, if any.",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_chunks","","Returns the chunks of this completion string.",30,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"completionstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"self"},{"name":"completionstring"}],"output":{"name":"option"}}],[11,"cmp","","",30,{"inputs":[{"name":"self"},{"name":"completionstring"}],"output":{"name":"ordering"}}],[0,"diagnostic","clang","Issues with source files.",null,null],[3,"Diagnostic","clang::diagnostic","A message from the compiler about an issue with a source file.",null,null],[3,"DiagnosticFormatter","","Builds formatted strings from diagnostics.",null,null],[4,"FixIt","","A suggested fix for an issue with a source file.",null,null],[13,"Deletion","","Delete a segment of the source file.",31,null],[13,"Insertion","","Insert a string into the source file.",31,null],[13,"Replacement","","Replace a segment of the source file with a string.",31,null],[4,"Severity","","Indicates the severity of a diagnostic.",null,null],[13,"Ignored","","The diagnostic has been suppressed (e.g., by a command-line option).",32,null],[13,"Note","","The diagnostic is attached to the previous non-note diagnostic.",32,null],[13,"Warning","","The diagnostic targets suspicious code that may or may not be wrong.",32,null],[13,"Error","","The diagnostic targets ill-formed code.",32,null],[13,"Fatal","","The diagnostic targets code that is ill-formed in such a way that parser recovery is unlikely to produce any useful results.",32,null],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"fixit"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"fixit"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"fixit"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"severity"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"severity"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"self"},{"name":"severity"}],"output":{"name":"option"}}],[11,"cmp","","",32,{"inputs":[{"name":"self"},{"name":"severity"}],"output":{"name":"ordering"}}],[11,"hash","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"diagnostic"}}],[11,"get_severity","","Returns the severity of this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"severity"}}],[11,"get_text","","Returns the text of this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_location","","Returns the source location of this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"sourcelocation"}}],[11,"get_ranges","","Returns the source ranges of this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_fix_its","","Returns the fix-its for this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_children","","Returns the child diagnostics of this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"formatter","","Returns a diagnostic formatter that builds a formatted string from this diagnostic.",33,{"inputs":[{"name":"self"}],"output":{"name":"diagnosticformatter"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"self"},{"name":"diagnostic"}],"output":{"name":"option"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"diagnosticformatter"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"source_location","","Sets whether the diagnostic text will be prefixed by the file and line of the source location the diagnostic indicates. This prefix may also contain column and/or source range information.",34,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"diagnosticformatter"}}],[11,"column","","Sets whether the column will be included in the source location prefix.",34,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"diagnosticformatter"}}],[11,"source_ranges","","Sets whether the source ranges will be included to the source location prefix.",34,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"diagnosticformatter"}}],[11,"option","","Sets whether the option associated with the diagnostic (e.g., `-Wconversion`) will be placed in brackets after the diagnostic text if there is such an option.",34,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"diagnosticformatter"}}],[11,"category_id","","Sets whether the category number associated with the diagnostic will be placed in brackets after the diagnostic text if there is such a category number.",34,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"diagnosticformatter"}}],[11,"category_name","","Sets whether the category name associated with the diagnostic will be placed in brackets after the diagnostic text if there is such a category name.",34,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"diagnosticformatter"}}],[11,"format","","Returns a formatted string.",34,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"documentation","clang","Comments.",null,null],[3,"BlockCommand","clang::documentation","A block command with zero or more arguments and a paragraph as an argument.",null,null],[12,"command","","The command.",35,null],[12,"arguments","","The command arguments.",35,null],[12,"children","","The children of the paragraph argument.",35,null],[3,"Comment","","A comment attached to a declaration.",null,null],[3,"HtmlStartTag","","An HTML start tag.",null,null],[12,"name","","The tag name.",36,null],[12,"attributes","","The attributes associated with the tag, if any.",36,null],[12,"closing","","Whether the tag is self-closing.",36,null],[3,"InlineCommand","","An inline command with word-like arguments.",null,null],[12,"command","","The command.",37,null],[12,"arguments","","The command arguments.",37,null],[12,"style","","The style with which to render the command arguments, if any.",37,null],[3,"ParamCommand","","A `\\param` command.",null,null],[12,"index","","The index of the parameter, if this command refers to a valid parameter.",38,null],[12,"parameter","","The parameter.",38,null],[12,"direction","","The parameter direction, if specified.",38,null],[12,"children","","The children of this parameter.",38,null],[3,"TParamCommand","","A `\\tparam` command.",null,null],[12,"position","","The nesting depth and the index of the template parameter, if this command refers to a valid template parameter.",39,null],[12,"parameter","","The template parameter.",39,null],[12,"children","","The children of this type parameter.",39,null],[4,"CommentChild","","A child component of a comment.",null,null],[13,"BlockCommand","","A block command with zero or more arguments and a paragraph as an argument.",40,null],[13,"HtmlStartTag","","An HTML start tag.",40,null],[13,"HtmlEndTag","","An HTML end tag.",40,null],[13,"InlineCommand","","An inline command with word-like arguments.",40,null],[13,"Paragraph","","A paragraph containing inline content.",40,null],[13,"ParamCommand","","A `\\param` command.",40,null],[13,"TParamCommand","","A `\\tparam` command.",40,null],[13,"Text","","Plain text.",40,null],[13,"VerbatimCommand","","A verbatim command with a closing command.",40,null],[13,"VerbatimLineCommand","","A verbatim command with a single line and no closing command.",40,null],[4,"ParameterDirection","","Indicates the parameter passing direction for a `\\param` command.",null,null],[13,"In","","Indicates the parameter is an input parameter.",41,null],[13,"Out","","Indicates the parameter is an output parameter.",41,null],[13,"InOut","","Indicates the parameter is both an input and an output parameter.",41,null],[4,"InlineCommandStyle","","Indicates the appropriate rendering style for an inline command argument.",null,null],[13,"Bold","","Indicates the command should be rendered in a bold font.",42,null],[13,"Monospace","","Indicates the command should be rendered in a monospace font.",42,null],[13,"Emphasized","","Indicates the command should be rendered emphasized (typically italicized).",42,null],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"commentchild"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"commentchild"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"commentchild"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"parameterdirection"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"parameterdirection"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"inlinecommandstyle"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"inlinecommandstyle"}],"output":{"name":"bool"}}],[11,"hash","","",42,null],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"blockcommand"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"blockcommand"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"blockcommand"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"comment"}}],[11,"get_children","","Returns the children of this comment.",43,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"as_html","","Returns this comment as an HTML string.",43,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"as_xml","","Returns this comment as an XML string.",43,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"htmlstarttag"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"htmlstarttag"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"htmlstarttag"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"inlinecommand"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"inlinecommand"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"inlinecommand"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"paramcommand"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"paramcommand"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"paramcommand"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"tparamcommand"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"tparamcommand"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"tparamcommand"}],"output":{"name":"bool"}}],[0,"source","clang","Source files, locations, and ranges.",null,null],[3,"File","clang::source","A source file.",null,null],[3,"Location","","The file, line, column, and character offset of a source location.",null,null],[12,"file","","The file of the source location, if it has any.",44,null],[12,"line","","The line of the source location.",44,null],[12,"column","","The column of the source location.",44,null],[12,"offset","","The character offset of the source location.",44,null],[3,"Module","","A collection of headers.",null,null],[3,"SourceLocation","","A location in a source file.",null,null],[3,"SourceRange","","A half-open range in a source file.",null,null],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"get_path","","Returns the absolute path to this file.",45,{"inputs":[{"name":"self"}],"output":{"name":"pathbuf"}}],[11,"get_time","","Returns the last modification time for this file.",45,{"inputs":[{"name":"self"}],"output":{"name":"time_t"}}],[11,"get_id","","Returns a unique identifier for this file.",45,null],[11,"get_module","","Returns the module containing this file, if any.",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_skipped_ranges","","Returns the source ranges in this file that were skipped by the preprocessor.",45,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"is_include_guarded","","Returns whether this file is guarded against multiple inclusions.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_location","","Returns the source location at the supplied line and column in this file.",45,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"sourcelocation"}}],[11,"get_offset_location","","Returns the source location at the supplied character offset in this file.",45,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"sourcelocation"}}],[11,"get_includes","","Returns the inclusion directives in this file.",45,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_references","","Returns the references to the supplied entity in this file.",45,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"vec"}}],[11,"visit_includes","","Visits the inclusion directives in this file and returns whether visitation was ended by the callback returning `false`.",45,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"visit_references","","Visits the references to the supplied entity in this file and returns whether visitation was ended by the callback returning `false`.",45,{"inputs":[{"name":"self"},{"name":"entity"},{"name":"f"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"bool"}}],[11,"hash","","",45,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"module"}}],[11,"get_name","","Returns the name of this module (e.g., `vector` for the `std.vector` module).",46,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_full_name","","Returns the full name of this module (e.g., `std.vector` for the `std.vector` module).",46,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_parent","","Returns the parent of this module, if any.",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_file","","Returns the AST file this module came from.",46,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"get_top_level_headers","","Returns the top-level headers in this module.",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"is_system","","Returns whether this module is a system module.",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"module"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"sourcelocation"}}],[11,"get_expansion_location","","Returns the file, line, column and character offset of this source location.",47,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"get_file_location","","Returns the file, line, column and character offset of this source location.",47,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"get_presumed_location","","Returns the file path, line, and column of this source location taking line directives into account.",47,null],[11,"get_spelling_location","","Returns the file, line, column and character offset of this source location.",47,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"get_entity","","Returns the AST entity at this source location, if any.",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_in_main_file","","Returns whether this source location is in the main file of its translation unit.",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_in_system_header","","Returns whether this source location is in a system header.",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"sourcelocation"}],"output":{"name":"bool"}}],[11,"hash","","",47,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"sourcerange"}}],[11,"new","","Constructs a new `SourceRange` that spans [`start`, `end`).",48,{"inputs":[{"name":"sourcelocation"},{"name":"sourcelocation"}],"output":{"name":"sourcerange"}}],[11,"get_start","","Returns the inclusive start of this source range.",48,{"inputs":[{"name":"self"}],"output":{"name":"sourcelocation"}}],[11,"get_end","","Returns the exclusive end of this source range.",48,{"inputs":[{"name":"self"}],"output":{"name":"sourcelocation"}}],[11,"is_in_main_file","","Returns whether this source range is in the main file of its translation unit.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_in_system_header","","Returns whether this source range is in a system header.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"tokenize","","Tokenizes the source code covered by this source range and returns the resulting tokens.",48,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"sourcerange"}],"output":{"name":"bool"}}],[11,"hash","","",48,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[0,"token","clang","Lexed pieces of source files.",null,null],[3,"Token","clang::token","A lexed piece of a source file.",null,null],[4,"TokenKind","","Indicates the categorization of a token.",null,null],[13,"Comment","","A comment token.",49,null],[13,"Identifier","","An identifier token.",49,null],[13,"Keyword","","A keyword token.",49,null],[13,"Literal","","A literal token.",49,null],[13,"Punctuation","","A puncuation token.",49,null],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"tokenkind"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"tokenkind"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"get_kind","","Returns the categorization of this token.",50,{"inputs":[{"name":"self"}],"output":{"name":"tokenkind"}}],[11,"get_spelling","","Returns the textual representation of this token.",50,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_location","","Returns the source location of this token.",50,{"inputs":[{"name":"self"}],"output":{"name":"sourcelocation"}}],[11,"get_range","","Returns the source range of this token.",50,{"inputs":[{"name":"self"}],"output":{"name":"sourcerange"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"sonar","clang","Finding C declarations.",null,null],[3,"Declaration","clang::sonar","A C declaration.",null,null],[12,"name","","The name of the declaration.",51,null],[12,"entity","","The entity that describes the declaration (e.g., contains the fields of a struct).",51,null],[12,"source","","The entity the declaration originated from if it differs from `entity`.",51,null],[3,"Definition","","A C preprocessor definition.",null,null],[12,"name","","The name of the definition.",52,null],[12,"value","","The value of the definition.",52,null],[12,"entity","","The entity that describes the definition.",52,null],[3,"Definitions","","An iterator over preprocessor definition declarations.",null,null],[3,"Enums","","An iterator over enum declarations.",null,null],[3,"Functions","","An iterator over function declarations.",null,null],[3,"Structs","","An iterator over struct declarations.",null,null],[3,"Typedefs","","An iterator over typedef declarations.",null,null],[3,"Unions","","An iterator over struct declarations.",null,null],[4,"DefinitionValue","","The value of a C preprocessor definition.",null,null],[13,"Integer","","An integer.",53,null],[13,"Real","","A floating point number.",53,null],[5,"find_definitions","","Returns an iterator over the simple preprocessor definitions in the supplied entities.",null,{"inputs":[{"name":"e"}],"output":{"name":"definitions"}}],[5,"find_enums","","Returns an iterator over the enums in the supplied entities.",null,{"inputs":[{"name":"e"}],"output":{"name":"enums"}}],[5,"find_functions","","Returns an iterator over the functions in the supplied entities.",null,{"inputs":[{"name":"e"}],"output":{"name":"functions"}}],[5,"find_structs","","Returns an iterator over the structs in the supplied entities.",null,{"inputs":[{"name":"e"}],"output":{"name":"structs"}}],[5,"find_typedefs","","Returns an iterator over the typedefs in the supplied entities.",null,{"inputs":[{"name":"e"}],"output":{"name":"typedefs"}}],[5,"find_unions","","Returns an iterator over the unions in the supplied entities.",null,{"inputs":[{"name":"e"}],"output":{"name":"unions"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"definitionvalue"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"definitionvalue"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"definitionvalue"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"declaration"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"declaration"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"declaration"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"definition"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"definition"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"definition"}],"output":{"name":"bool"}}],[11,"next","","",54,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",55,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",57,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",58,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","clang","",6,{"inputs":[{"name":"self"}],"output":{"name":"alignoferror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"alignoferror"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"offsetoferror"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"offsetoferror"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"saveerror"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"saveerror"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"sizeoferror"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"sizeoferror"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"description","","",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sourceerror"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"sourceerror"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"objcattributes"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"objcattributes"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"objcattributes"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"objcattributes"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"accessibility"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"accessibility"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"availability"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"availability"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"callingconvention"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"callingconvention"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"entitykind"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"entitykind"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"entityvisitresult"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"entityvisitresult"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"evaluationresult"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"evaluationresult"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"evaluationresult"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"language"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"language"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"linkage"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"linkage"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"memoryusage"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"memoryusage"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"refqualifier"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"refqualifier"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"storageclass"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"storageclass"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"templateargument"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"templateargument"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"templateargument"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"typekind"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"typekind"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Clang`.",60,{"inputs":[],"output":{"name":"result"}}],[11,"drop","","",60,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"entity"}}],[11,"evaluate","","Evaluates this AST entity, if possible.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_kind","","Returns the categorization of this AST entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"entitykind"}}],[11,"get_display_name","","Returns the display name of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_location","","Returns the source location of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_range","","Returns the source range of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_accessibility","","Returns the accessibility of this declaration or base class specifier, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_arguments","","Returns the arguments of this function or method, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_availability","","Returns the availability of this AST entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"availability"}}],[11,"get_bit_field_width","","Returns the width of this bit field, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_canonical_entity","","Returns the canonical entity for this AST entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"entity"}}],[11,"get_comment","","Returns the comment associated with this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_parsed_comment","","Returns the parsed comment associated with this declaration, if application.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_comment_brief","","Returns the brief of the comment associated with this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_comment_range","","Returns the source range of the comment associated with this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_completion_string","","Returns a completion string for this declaration or macro definition, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_child","","Returns the child of this AST entity with the supplied index.",61,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_children","","Returns the children of this AST entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_definition","","Returns the AST entity that describes the definition of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_enum_constant_value","","Returns the value of this enum constant declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_enum_underlying_type","","Returns the underlying type of this enum declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_file","","Returns the file included by this inclusion directive, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_language","","Returns the language used by this declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_lexical_parent","","Returns the lexical parent of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_linkage","","Returns the linkage of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mangled_name","","Returns the mangled name of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mangled_names","","Returns the mangled names of this C++ constructor or destructor, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_module","","Returns the module imported by this module import declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_name","","Returns the name of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_name_ranges","","Returns the source ranges of the name of this AST entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_objc_attributes","","Returns which attributes were applied to this Objective-C property, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_ib_outlet_collection_type","","Returns the element type for this Objective-C `iboutletcollection` attribute, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_receiver_type","","Returns the type of the receiver of this Objective-C message, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_selector_index","","Returns the selector index for this Objective-C selector identifier, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_type_encoding","","Returns the type encoding for this Objective-C declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_qualifiers","","Returns which qualifiers were applied to this Objective-C method return or parameter type, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_overloaded_declarations","","Returns the overloaded declarations referenced by this overloaded declaration reference, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_overridden_methods","","Returns the methods that were overridden by this method, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_platform_availability","","Returns the availability of this declaration on the platforms where it is known, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reference","","Returns the AST entity referred to by this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_semantic_parent","","Returns the semantic parent of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_storage_class","","Returns the storage class of this declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_template","","Returns the template declaration this template specialization was instantiated from, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_template_arguments","","Returns the template arguments for this template function specialization, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_template_kind","","Returns the categorization of the template specialization that would result from instantiating this template declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_translation_unit","","Returns the translation unit which contains this AST entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"translationunit"}}],[11,"get_type","","Returns the type of this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_typedef_underlying_type","","Returns the underlying type of this typedef declaration, if applicable.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_usr","","Returns the USR for this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_visibility","","Returns the linker visibility for this AST entity, if any.",61,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"has_attributes","","Returns whether this AST entity has any attached attributes.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_anonymous","","Returns whether this AST entity is an anonymous record declaration.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bit_field","","Returns whether this AST entity is a bit field.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_builtin_macro","","Returns whether this AST entity is a builtin macro.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_const_method","","Returns whether this AST entity is a const method.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_converting_constructor","","Returns whether this AST entity is a C++ converting constructor.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_copy_constructor","","Returns whether this AST entity is a C++ copy constructor.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_default_constructor","","Returns whether this AST entity is a C++ default constructor.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_defaulted","","Returns whether this AST entity is a C++ defaulted constructor or method.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_definition","","Returns whether this AST entity is a declaration and also the definition of that declaration.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_dynamic_call","","Returns whether this AST entity is a dynamic call.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_function_like_macro","","Returns whether this AST entity is a function-like macro.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_inline_function","","Returns whether this AST entity is an inline function.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_move_constructor","","Returns whether this AST entity is a C++ default constructor.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_mutable","","Returns whether this AST entity is a mutable field in a C++ struct or class.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_objc_optional","","Returns whether this AST entity is an Objective-C method or property declaration with the `@optional` attribute applied to it.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_pure_virtual_method","","Returns whether this AST entity is a pure virtual method.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_static_method","","Returns whether this AST entity is a static method.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_variadic","","Returns whether this AST entity is a variadic function or method.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_virtual_base","","Returns whether this AST entity is a virtual base class specifier.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_virtual_method","","Returns whether this AST entity is a virtual method.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"visit_children","","Visits the children of this AST entity recursively and returns whether visitation was ended by the callback returning `EntityVisitResult::Break`.",61,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"is_attribute","","Returns whether this AST entity is categorized as an attribute.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_declaration","","Returns whether this AST entity is categorized as a declaration.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_expression","","Returns whether this AST entity is categorized as an expression.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_preprocessing","","Returns whether this AST entity is categorized as a preprocessing entity.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_reference","","Returns whether this AST entity is categorized as a reference.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_statement","","Returns whether this AST entity is categorized as a statement.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_unexposed","","Returns whether the categorization of this AST entity is unexposed.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_in_main_file","","Returns whether this AST entity is in a main file.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_in_system_header","","Returns whether this AST entity is in a system header.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"entity"}],"output":{"name":"bool"}}],[11,"hash","","",61,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"new","","Constructs a new `Index`.",62,{"inputs":[{"name":"clang"},{"name":"bool"},{"name":"bool"}],"output":{"name":"index"}}],[11,"parser","","Returns a parser for the supplied file.",62,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"parser"}}],[11,"get_thread_options","","Returns the thread options for this index.",62,{"inputs":[{"name":"self"}],"output":{"name":"threadoptions"}}],[11,"set_thread_options","","Sets the thread options for this index.",62,{"inputs":[{"name":"self"},{"name":"threadoptions"}],"output":null}],[11,"drop","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"objcqualifiers"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"objcqualifiers"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"objcqualifiers"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"from","","",1,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"objcqualifiers"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"parser"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cache_completion_results","","Sets whether certain code completion results will be cached when the translation unit is reparsed.",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parser"}}],[11,"detailed_preprocessing_record","","Sets whether a detailed preprocessing record will be constructed which tracks all macro definitions and instantiations.",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parser"}}],[11,"briefs_in_completion_results","","Sets whether documentation comment briefs will be included in code completion results.",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parser"}}],[11,"incomplete","","Sets whether the translation unit will be considered incomplete.",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parser"}}],[11,"skip_function_bodies","","Sets whether function and method bodies will be skipped.",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parser"}}],[11,"keep_going","","Sets whether processing will continue after a fatal error is encountered.",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parser"}}],[11,"arguments","","Sets the compiler arguments to provide to `libclang`.",63,null],[11,"unsaved","","Sets the unsaved files to use.",63,null],[11,"parse","","Parses a translation unit.",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"platformavailability"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"platformavailability"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"platformavailability"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"threadoptions"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"threadoptions"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"threadoptions"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"threadoptions"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"from","","",3,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"threadoptions"}}],[11,"from_ast","","Constructs a new `TranslationUnit` from an AST file.",64,{"inputs":[{"name":"index"},{"name":"f"}],"output":{"name":"result"}}],[11,"get_diagnostics","","Returns the diagnostics for this translation unit.",64,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_entity","","Returns the entity for this translation unit.",64,{"inputs":[{"name":"self"}],"output":{"name":"entity"}}],[11,"get_file","","Returns the file at the supplied path in this translation unit, if any.",64,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"get_memory_usage","","Returns the memory usage of this translation unit.",64,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"get_skipped_ranges","","Returns the source ranges in this translation unit that were skipped by the preprocessor.",64,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"annotate","","Returns the AST entities which correspond to the supplied tokens, if any.",64,null],[11,"completer","","Returns a completer which runs code completion.",64,{"inputs":[{"name":"self"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"completer"}}],[11,"save","","Saves this translation unit to an AST file.",64,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"reparse","","Consumes this translation unit and reparses the source file it was created from with the same compiler arguments that were used originally.",64,null],[11,"drop","","",64,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"get_kind","","Returns the kind of this type.",65,{"inputs":[{"name":"self"}],"output":{"name":"typekind"}}],[11,"get_display_name","","Returns the display name of this type.",65,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_alignof","","Returns the alignment of this type in bytes.",65,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_offsetof","","Returns the offset of the field with the supplied name in this record type in bits.",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"get_sizeof","","Returns the size of this type in bytes.",65,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_argument_types","","Returns the argument types for this function or method type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_calling_convention","","Returns the calling convention specified for this function type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_canonical_type","","Returns the canonical type for this type.",65,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"get_class_type","","Returns the class type for this member pointer type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_declaration","","Returns the AST entity that declared this type, if any.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_elaborated_type","","Returns the type named by this elaborated type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_element_type","","Returns the element type for this array, complex, or vector type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_fields","","Returns the fields in this record type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_objc_encoding","","Returns the encoding of this Objective-C type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_pointee_type","","Returns the pointee type for this pointer type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref_qualifier","","Returns the ref qualifier for this C++ function or method type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_result_type","","Returns the result type for this function or method type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_size","","Returns the size of this constant array or vector type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_template_argument_types","","Returns the template argument types for this template class specialization type, if applicable.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_const_qualified","","Returns whether this type is qualified with const.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_elaborated","","Returns whether this type is an elaborated type, if it can be determined for certain.",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_pod","","Returns whether this type is plain old data (POD).",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_restrict_qualified","","Returns whether this type is qualified with restrict.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_variadic","","Returns whether this type is a variadic function type.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_volatile_qualified","","Returns whether this type is qualified with volatile.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"visit_fields","","Visits the fields in this record type, returning `None` if this type is not a record type and returning `Some(b)` otherwise where `b` indicates whether visitation was ended by the callback returning `false`.",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"is_integer","","Returns whether this type is an integer type.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_signed_integer","","Returns whether this type is a signed integer type.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_unsigned_integer","","Returns whether this type is an unsigned integer type.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"unsaved"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"unsaved"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"unsaved"}],"output":{"name":"bool"}}],[11,"hash","","",66,null],[11,"new","","Constructs a new `Unsaved`.",66,{"inputs":[{"name":"p"},{"name":"c"}],"output":{"name":"unsaved"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"usr"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"usr"}],"output":{"name":"ordering"}}],[11,"hash","","",4,null],[11,"from_objc_category","","Constructs a new `Usr` from an Objective-C category.",4,{"inputs":[{"name":"c"},{"name":"c"}],"output":{"name":"usr"}}],[11,"from_objc_class","","Constructs a new `Usr` from an Objective-C class.",4,{"inputs":[{"name":"c"}],"output":{"name":"usr"}}],[11,"from_objc_ivar","","Constructs a new `Usr` from an Objective-C instance variable.",4,{"inputs":[{"name":"usr"},{"name":"n"}],"output":{"name":"usr"}}],[11,"from_objc_method","","Constructs a new `Usr` from an Objective-C method.",4,{"inputs":[{"name":"usr"},{"name":"n"},{"name":"bool"}],"output":{"name":"usr"}}],[11,"from_objc_property","","Constructs a new `Usr` from an Objective-C property.",4,{"inputs":[{"name":"usr"},{"name":"n"}],"output":{"name":"usr"}}],[11,"from_objc_protocol","","Constructs a new `Usr` from an Objective-C protocol.",4,{"inputs":[{"name":"p"}],"output":{"name":"usr"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"hash","","",5,null]],"paths":[[3,"ObjCAttributes"],[3,"ObjCQualifiers"],[3,"PlatformAvailability"],[3,"ThreadOptions"],[3,"Usr"],[3,"Version"],[4,"AlignofError"],[4,"OffsetofError"],[4,"SaveError"],[4,"SizeofError"],[4,"SourceError"],[4,"Accessibility"],[4,"Availability"],[4,"CallingConvention"],[4,"EntityKind"],[4,"EntityVisitResult"],[4,"EvaluationResult"],[4,"Language"],[4,"Linkage"],[4,"MemoryUsage"],[4,"RefQualifier"],[4,"StorageClass"],[4,"TemplateArgument"],[4,"TypeKind"],[4,"Visibility"],[3,"CompletionContext"],[3,"CompletionResult"],[4,"CompletionChunk"],[3,"Completer"],[3,"CompletionResults"],[3,"CompletionString"],[4,"FixIt"],[4,"Severity"],[3,"Diagnostic"],[3,"DiagnosticFormatter"],[3,"BlockCommand"],[3,"HtmlStartTag"],[3,"InlineCommand"],[3,"ParamCommand"],[3,"TParamCommand"],[4,"CommentChild"],[4,"ParameterDirection"],[4,"InlineCommandStyle"],[3,"Comment"],[3,"Location"],[3,"File"],[3,"Module"],[3,"SourceLocation"],[3,"SourceRange"],[4,"TokenKind"],[3,"Token"],[3,"Declaration"],[3,"Definition"],[4,"DefinitionValue"],[3,"Definitions"],[3,"Enums"],[3,"Functions"],[3,"Structs"],[3,"Typedefs"],[3,"Unions"],[3,"Clang"],[3,"Entity"],[3,"Index"],[3,"Parser"],[3,"TranslationUnit"],[3,"Type"],[3,"Unsaved"]]};
searchIndex["clang_sys"] = {"doc":"Rust bindings for `libclang`.","items":[[3,"CXCodeComplete_Flags","clang_sys","",null,null],[3,"CXCompletionContext","","",null,null],[3,"CXDiagnosticDisplayOptions","","",null,null],[3,"CXGlobalOptFlags","","",null,null],[3,"CXIdxDeclInfoFlags","","",null,null],[3,"CXIndexOptFlags","","",null,null],[3,"CXNameRefFlags","","",null,null],[3,"CXObjCDeclQualifierKind","","",null,null],[3,"CXObjCPropertyAttrKind","","",null,null],[3,"CXReparse_Flags","","",null,null],[3,"CXSaveTranslationUnit_Flags","","",null,null],[3,"CXTranslationUnit_Flags","","",null,null],[3,"CXCodeCompleteResults","","",null,null],[12,"Results","","",0,null],[12,"NumResults","","",0,null],[3,"CXComment","","",null,null],[12,"ASTNode","","",1,null],[12,"TranslationUnit","","",1,null],[3,"CXCompletionResult","","",null,null],[12,"CursorKind","","",2,null],[12,"CompletionString","","",2,null],[3,"CXCursor","","",null,null],[12,"kind","","",3,null],[12,"xdata","","",3,null],[12,"data","","",3,null],[3,"CXCursorAndRangeVisitor","","",null,null],[12,"context","","",4,null],[12,"visit","","",4,null],[3,"CXFileUniqueID","","",null,null],[12,"data","","",5,null],[3,"CXIdxAttrInfo","","",null,null],[12,"kind","","",6,null],[12,"cursor","","",6,null],[12,"loc","","",6,null],[3,"CXIdxBaseClassInfo","","",null,null],[12,"base","","",7,null],[12,"cursor","","",7,null],[12,"loc","","",7,null],[3,"CXIdxCXXClassDeclInfo","","",null,null],[12,"declInfo","","",8,null],[12,"bases","","",8,null],[12,"numBases","","",8,null],[3,"CXIdxContainerInfo","","",null,null],[12,"cursor","","",9,null],[3,"CXIdxDeclInfo","","",null,null],[12,"entityInfo","","",10,null],[12,"cursor","","",10,null],[12,"loc","","",10,null],[12,"semanticContainer","","",10,null],[12,"lexicalContainer","","",10,null],[12,"isRedeclaration","","",10,null],[12,"isDefinition","","",10,null],[12,"isContainer","","",10,null],[12,"declAsContainer","","",10,null],[12,"isImplicit","","",10,null],[12,"attributes","","",10,null],[12,"numAttributes","","",10,null],[12,"flags","","",10,null],[3,"CXIdxEntityInfo","","",null,null],[12,"kind","","",11,null],[12,"templateKind","","",11,null],[12,"lang","","",11,null],[12,"name","","",11,null],[12,"USR","","",11,null],[12,"cursor","","",11,null],[12,"attributes","","",11,null],[12,"numAttributes","","",11,null],[3,"CXIdxEntityRefInfo","","",null,null],[12,"kind","","",12,null],[12,"cursor","","",12,null],[12,"loc","","",12,null],[12,"referencedEntity","","",12,null],[12,"parentEntity","","",12,null],[12,"container","","",12,null],[3,"CXIdxIBOutletCollectionAttrInfo","","",null,null],[12,"attrInfo","","",13,null],[12,"objcClass","","",13,null],[12,"classCursor","","",13,null],[12,"classLoc","","",13,null],[3,"CXIdxImportedASTFileInfo","","",null,null],[12,"file","","",14,null],[12,"module","","",14,null],[12,"loc","","",14,null],[12,"isImplicit","","",14,null],[3,"CXIdxIncludedFileInfo","","",null,null],[12,"hashLoc","","",15,null],[12,"filename","","",15,null],[12,"file","","",15,null],[12,"isImport","","",15,null],[12,"isAngled","","",15,null],[12,"isModuleImport","","",15,null],[3,"CXIdxLoc","","",null,null],[12,"ptr_data","","",16,null],[12,"int_data","","",16,null],[3,"CXIdxObjCCategoryDeclInfo","","",null,null],[12,"containerInfo","","",17,null],[12,"objcClass","","",17,null],[12,"classCursor","","",17,null],[12,"classLoc","","",17,null],[12,"protocols","","",17,null],[3,"CXIdxObjCContainerDeclInfo","","",null,null],[12,"declInfo","","",18,null],[12,"kind","","",18,null],[3,"CXIdxObjCInterfaceDeclInfo","","",null,null],[12,"containerInfo","","",19,null],[12,"superInfo","","",19,null],[12,"protocols","","",19,null],[3,"CXIdxObjCPropertyDeclInfo","","",null,null],[12,"declInfo","","",20,null],[12,"getter","","",20,null],[12,"setter","","",20,null],[3,"CXIdxObjCProtocolRefInfo","","",null,null],[12,"protocol","","",21,null],[12,"cursor","","",21,null],[12,"loc","","",21,null],[3,"CXIdxObjCProtocolRefListInfo","","",null,null],[12,"protocols","","",22,null],[12,"numProtocols","","",22,null],[3,"CXPlatformAvailability","","",null,null],[12,"Platform","","",23,null],[12,"Introduced","","",23,null],[12,"Deprecated","","",23,null],[12,"Obsoleted","","",23,null],[12,"Unavailable","","",23,null],[12,"Message","","",23,null],[3,"CXSourceLocation","","",null,null],[12,"ptr_data","","",24,null],[12,"int_data","","",24,null],[3,"CXSourceRange","","",null,null],[12,"ptr_data","","",25,null],[12,"begin_int_data","","",25,null],[12,"end_int_data","","",25,null],[3,"CXSourceRangeList","","",null,null],[12,"count","","",26,null],[12,"ranges","","",26,null],[3,"CXString","","",null,null],[12,"data","","",27,null],[12,"private_flags","","",27,null],[3,"CXStringSet","","",null,null],[12,"Strings","","",28,null],[12,"Count","","",28,null],[3,"CXTUResourceUsage","","",null,null],[12,"data","","",29,null],[12,"numEntries","","",29,null],[12,"entries","","",29,null],[3,"CXTUResourceUsageEntry","","",null,null],[12,"kind","","",30,null],[12,"amount","","",30,null],[3,"CXToken","","",null,null],[12,"int_data","","",31,null],[12,"ptr_data","","",31,null],[3,"CXType","","",null,null],[12,"kind","","",32,null],[12,"data","","",32,null],[3,"CXUnsavedFile","","",null,null],[12,"Filename","","",33,null],[12,"Contents","","",33,null],[12,"Length","","",33,null],[3,"CXVersion","","",null,null],[12,"Major","","",34,null],[12,"Minor","","",34,null],[12,"Subminor","","",34,null],[3,"IndexerCallbacks","","",null,null],[12,"abortQuery","","",35,null],[12,"diagnostic","","",35,null],[12,"enteredMainFile","","",35,null],[12,"ppIncludedFile","","",35,null],[12,"importedASTFile","","",35,null],[12,"startedTranslationUnit","","",35,null],[12,"indexDeclaration","","",35,null],[12,"indexEntityReference","","",35,null],[5,"clang_CXCursorSet_contains","","",null,null],[5,"clang_CXCursorSet_insert","","",null,null],[5,"clang_CXIndex_getGlobalOptions","","",null,null],[5,"clang_CXIndex_setGlobalOptions","","",null,null],[5,"clang_CXXConstructor_isConvertingConstructor","","",null,null],[5,"clang_CXXConstructor_isCopyConstructor","","",null,null],[5,"clang_CXXConstructor_isDefaultConstructor","","",null,null],[5,"clang_CXXConstructor_isMoveConstructor","","",null,null],[5,"clang_CXXField_isMutable","","",null,null],[5,"clang_CXXMethod_isConst","","",null,null],[5,"clang_CXXMethod_isDefaulted","","",null,null],[5,"clang_CXXMethod_isPureVirtual","","",null,null],[5,"clang_CXXMethod_isStatic","","",null,null],[5,"clang_CXXMethod_isVirtual","","",null,null],[5,"clang_CompilationDatabase_dispose","","",null,null],[5,"clang_CompilationDatabase_fromDirectory","","",null,null],[5,"clang_CompilationDatabase_getAllCompileCommands","","",null,null],[5,"clang_CompilationDatabase_getCompileCommands","","",null,null],[5,"clang_CompileCommand_getArg","","",null,null],[5,"clang_CompileCommand_getDirectory","","",null,null],[5,"clang_CompileCommand_getFilename","","",null,null],[5,"clang_CompileCommand_getMappedSourceContent","","",null,null],[5,"clang_CompileCommand_getMappedSourcePath","","",null,null],[5,"clang_CompileCommand_getNumArgs","","",null,null],[5,"clang_CompileCommands_dispose","","",null,null],[5,"clang_CompileCommands_getCommand","","",null,null],[5,"clang_CompileCommands_getSize","","",null,null],[5,"clang_Cursor_Evaluate","","",null,null],[5,"clang_Cursor_getArgument","","",null,null],[5,"clang_Cursor_getBriefCommentText","","",null,null],[5,"clang_Cursor_getCXXManglings","","",null,null],[5,"clang_Cursor_getCommentRange","","",null,null],[5,"clang_Cursor_getMangling","","",null,null],[5,"clang_Cursor_getModule","","",null,null],[5,"clang_Cursor_getNumArguments","","",null,null],[5,"clang_Cursor_getNumTemplateArguments","","",null,null],[5,"clang_Cursor_getObjCDeclQualifiers","","",null,null],[5,"clang_Cursor_getObjCPropertyAttributes","","",null,null],[5,"clang_Cursor_getObjCSelectorIndex","","",null,null],[5,"clang_Cursor_getOffsetOfField","","",null,null],[5,"clang_Cursor_getRawCommentText","","",null,null],[5,"clang_Cursor_getReceiverType","","",null,null],[5,"clang_Cursor_getSpellingNameRange","","",null,null],[5,"clang_Cursor_getStorageClass","","",null,null],[5,"clang_Cursor_getTemplateArgumentKind","","",null,null],[5,"clang_Cursor_getTemplateArgumentType","","",null,null],[5,"clang_Cursor_getTemplateArgumentUnsignedValue","","",null,null],[5,"clang_Cursor_getTemplateArgumentValue","","",null,null],[5,"clang_Cursor_getTranslationUnit","","",null,null],[5,"clang_Cursor_hasAttrs","","",null,null],[5,"clang_Cursor_isAnonymous","","",null,null],[5,"clang_Cursor_isBitField","","",null,null],[5,"clang_Cursor_isDynamicCall","","",null,null],[5,"clang_Cursor_isFunctionInlined","","",null,null],[5,"clang_Cursor_isMacroBuiltin","","",null,null],[5,"clang_Cursor_isMacroFunctionLike","","",null,null],[5,"clang_Cursor_isNull","","",null,null],[5,"clang_Cursor_isObjCOptional","","",null,null],[5,"clang_Cursor_isVariadic","","",null,null],[5,"clang_EvalResult_dispose","","",null,null],[5,"clang_EvalResult_getAsDouble","","",null,null],[5,"clang_EvalResult_getAsInt","","",null,null],[5,"clang_EvalResult_getAsLongLong","","",null,null],[5,"clang_EvalResult_getAsStr","","",null,null],[5,"clang_EvalResult_getAsUnsigned","","",null,null],[5,"clang_EvalResult_getKind","","",null,null],[5,"clang_EvalResult_isUnsignedInt","","",null,null],[5,"clang_File_isEqual","","",null,null],[5,"clang_IndexAction_create","","",null,null],[5,"clang_IndexAction_dispose","","",null,null],[5,"clang_Location_isFromMainFile","","",null,null],[5,"clang_Location_isInSystemHeader","","",null,null],[5,"clang_Module_getASTFile","","",null,null],[5,"clang_Module_getFullName","","",null,null],[5,"clang_Module_getName","","",null,null],[5,"clang_Module_getNumTopLevelHeaders","","",null,null],[5,"clang_Module_getParent","","",null,null],[5,"clang_Module_getTopLevelHeader","","",null,null],[5,"clang_Module_isSystem","","",null,null],[5,"clang_Range_isNull","","",null,null],[5,"clang_Type_getAlignOf","","",null,null],[5,"clang_Type_getCXXRefQualifier","","",null,null],[5,"clang_Type_getClassType","","",null,null],[5,"clang_Type_getNamedType","","",null,null],[5,"clang_Type_getNumTemplateArguments","","",null,null],[5,"clang_Type_getObjCEncoding","","",null,null],[5,"clang_Type_getOffsetOf","","",null,null],[5,"clang_Type_getSizeOf","","",null,null],[5,"clang_Type_getTemplateArgumentAsType","","",null,null],[5,"clang_Type_visitFields","","",null,null],[5,"clang_annotateTokens","","",null,null],[5,"clang_codeCompleteAt","","",null,null],[5,"clang_codeCompleteGetContainerKind","","",null,null],[5,"clang_codeCompleteGetContainerUSR","","",null,null],[5,"clang_codeCompleteGetContexts","","",null,null],[5,"clang_codeCompleteGetDiagnostic","","",null,null],[5,"clang_codeCompleteGetNumDiagnostics","","",null,null],[5,"clang_codeCompleteGetObjCSelector","","",null,null],[5,"clang_constructUSR_ObjCCategory","","",null,null],[5,"clang_constructUSR_ObjCClass","","",null,null],[5,"clang_constructUSR_ObjCIvar","","",null,null],[5,"clang_constructUSR_ObjCMethod","","",null,null],[5,"clang_constructUSR_ObjCProperty","","",null,null],[5,"clang_constructUSR_ObjCProtocol","","",null,null],[5,"clang_createCXCursorSet","","",null,null],[5,"clang_createIndex","","",null,null],[5,"clang_createTranslationUnit","","",null,null],[5,"clang_createTranslationUnit2","","",null,null],[5,"clang_createTranslationUnitFromSourceFile","","",null,null],[5,"clang_defaultCodeCompleteOptions","","",null,null],[5,"clang_defaultDiagnosticDisplayOptions","","",null,null],[5,"clang_defaultEditingTranslationUnitOptions","","",null,null],[5,"clang_defaultReparseOptions","","",null,null],[5,"clang_defaultSaveOptions","","",null,null],[5,"clang_disposeCXCursorSet","","",null,null],[5,"clang_disposeCXPlatformAvailability","","",null,null],[5,"clang_disposeCXTUResourceUsage","","",null,null],[5,"clang_disposeCodeCompleteResults","","",null,null],[5,"clang_disposeDiagnostic","","",null,null],[5,"clang_disposeDiagnosticSet","","",null,null],[5,"clang_disposeIndex","","",null,null],[5,"clang_disposeOverriddenCursors","","",null,null],[5,"clang_disposeSourceRangeList","","",null,null],[5,"clang_disposeString","","",null,null],[5,"clang_disposeStringSet","","",null,null],[5,"clang_disposeTokens","","",null,null],[5,"clang_disposeTranslationUnit","","",null,null],[5,"clang_enableStackTraces","","",null,null],[5,"clang_equalCursors","","",null,null],[5,"clang_equalLocations","","",null,null],[5,"clang_equalRanges","","",null,null],[5,"clang_equalTypes","","",null,null],[5,"clang_executeOnThread","","",null,null],[5,"clang_findIncludesInFile","","",null,null],[5,"clang_findReferencesInFile","","",null,null],[5,"clang_formatDiagnostic","","",null,null],[5,"clang_free","","",null,null],[5,"clang_getAllSkippedRanges","","",null,null],[5,"clang_getArgType","","",null,null],[5,"clang_getArrayElementType","","",null,null],[5,"clang_getArraySize","","",null,null],[5,"clang_getCString","","",null,null],[5,"clang_getCXTUResourceUsage","","",null,null],[5,"clang_getCXXAccessSpecifier","","",null,null],[5,"clang_getCanonicalCursor","","",null,null],[5,"clang_getCanonicalType","","",null,null],[5,"clang_getChildDiagnostics","","",null,null],[5,"clang_getClangVersion","","",null,null],[5,"clang_getCompletionAnnotation","","",null,null],[5,"clang_getCompletionAvailability","","",null,null],[5,"clang_getCompletionBriefComment","","",null,null],[5,"clang_getCompletionChunkCompletionString","","",null,null],[5,"clang_getCompletionChunkKind","","",null,null],[5,"clang_getCompletionChunkText","","",null,null],[5,"clang_getCompletionNumAnnotations","","",null,null],[5,"clang_getCompletionParent","","",null,null],[5,"clang_getCompletionPriority","","",null,null],[5,"clang_getCursor","","",null,null],[5,"clang_getCursorAvailability","","",null,null],[5,"clang_getCursorCompletionString","","",null,null],[5,"clang_getCursorDefinition","","",null,null],[5,"clang_getCursorDisplayName","","",null,null],[5,"clang_getCursorExtent","","",null,null],[5,"clang_getCursorKind","","",null,null],[5,"clang_getCursorKindSpelling","","",null,null],[5,"clang_getCursorLanguage","","",null,null],[5,"clang_getCursorLexicalParent","","",null,null],[5,"clang_getCursorLinkage","","",null,null],[5,"clang_getCursorLocation","","",null,null],[5,"clang_getCursorPlatformAvailability","","",null,null],[5,"clang_getCursorReferenceNameRange","","",null,null],[5,"clang_getCursorReferenced","","",null,null],[5,"clang_getCursorResultType","","",null,null],[5,"clang_getCursorSemanticParent","","",null,null],[5,"clang_getCursorSpelling","","",null,null],[5,"clang_getCursorType","","",null,null],[5,"clang_getCursorUSR","","",null,null],[5,"clang_getCursorVisibility","","",null,null],[5,"clang_getDeclObjCTypeEncoding","","",null,null],[5,"clang_getDefinitionSpellingAndExtent","","",null,null],[5,"clang_getDiagnostic","","",null,null],[5,"clang_getDiagnosticCategory","","",null,null],[5,"clang_getDiagnosticCategoryName","","",null,null],[5,"clang_getDiagnosticCategoryText","","",null,null],[5,"clang_getDiagnosticFixIt","","",null,null],[5,"clang_getDiagnosticInSet","","",null,null],[5,"clang_getDiagnosticLocation","","",null,null],[5,"clang_getDiagnosticNumFixIts","","",null,null],[5,"clang_getDiagnosticNumRanges","","",null,null],[5,"clang_getDiagnosticOption","","",null,null],[5,"clang_getDiagnosticRange","","",null,null],[5,"clang_getDiagnosticSetFromTU","","",null,null],[5,"clang_getDiagnosticSeverity","","",null,null],[5,"clang_getDiagnosticSpelling","","",null,null],[5,"clang_getElementType","","",null,null],[5,"clang_getEnumConstantDeclUnsignedValue","","",null,null],[5,"clang_getEnumConstantDeclValue","","",null,null],[5,"clang_getEnumDeclIntegerType","","",null,null],[5,"clang_getExpansionLocation","","",null,null],[5,"clang_getFieldDeclBitWidth","","",null,null],[5,"clang_getFile","","",null,null],[5,"clang_getFileLocation","","",null,null],[5,"clang_getFileName","","",null,null],[5,"clang_getFileTime","","",null,null],[5,"clang_getFileUniqueID","","",null,null],[5,"clang_getFunctionTypeCallingConv","","",null,null],[5,"clang_getIBOutletCollectionType","","",null,null],[5,"clang_getIncludedFile","","",null,null],[5,"clang_getInclusions","","",null,null],[5,"clang_getInstantiationLocation","","",null,null],[5,"clang_getLocation","","",null,null],[5,"clang_getLocationForOffset","","",null,null],[5,"clang_getModuleForFile","","",null,null],[5,"clang_getNullCursor","","",null,null],[5,"clang_getNullLocation","","",null,null],[5,"clang_getNullRange","","",null,null],[5,"clang_getNumArgTypes","","",null,null],[5,"clang_getNumCompletionChunks","","",null,null],[5,"clang_getNumDiagnostics","","",null,null],[5,"clang_getNumDiagnosticsInSet","","",null,null],[5,"clang_getNumElements","","",null,null],[5,"clang_getNumOverloadedDecls","","",null,null],[5,"clang_getOverloadedDecl","","",null,null],[5,"clang_getOverriddenCursors","","",null,null],[5,"clang_getPointeeType","","",null,null],[5,"clang_getPresumedLocation","","",null,null],[5,"clang_getRange","","",null,null],[5,"clang_getRangeEnd","","",null,null],[5,"clang_getRangeStart","","",null,null],[5,"clang_getRemappings","","",null,null],[5,"clang_getRemappingsFromFileList","","",null,null],[5,"clang_getResultType","","",null,null],[5,"clang_getSkippedRanges","","",null,null],[5,"clang_getSpecializedCursorTemplate","","",null,null],[5,"clang_getSpellingLocation","","",null,null],[5,"clang_getTUResourceUsageName","","",null,null],[5,"clang_getTemplateCursorKind","","",null,null],[5,"clang_getTokenExtent","","",null,null],[5,"clang_getTokenKind","","",null,null],[5,"clang_getTokenLocation","","",null,null],[5,"clang_getTokenSpelling","","",null,null],[5,"clang_getTranslationUnitCursor","","",null,null],[5,"clang_getTranslationUnitSpelling","","",null,null],[5,"clang_getTypeDeclaration","","",null,null],[5,"clang_getTypeKindSpelling","","",null,null],[5,"clang_getTypeSpelling","","",null,null],[5,"clang_getTypedefDeclUnderlyingType","","",null,null],[5,"clang_hashCursor","","",null,null],[5,"clang_indexLoc_getCXSourceLocation","","",null,null],[5,"clang_indexLoc_getFileLocation","","",null,null],[5,"clang_indexSourceFile","","",null,null],[5,"clang_indexSourceFileFullArgv","","",null,null],[5,"clang_indexTranslationUnit","","",null,null],[5,"clang_index_getCXXClassDeclInfo","","",null,null],[5,"clang_index_getClientContainer","","",null,null],[5,"clang_index_getClientEntity","","",null,null],[5,"clang_index_getIBOutletCollectionAttrInfo","","",null,null],[5,"clang_index_getObjCCategoryDeclInfo","","",null,null],[5,"clang_index_getObjCContainerDeclInfo","","",null,null],[5,"clang_index_getObjCInterfaceDeclInfo","","",null,null],[5,"clang_index_getObjCPropertyDeclInfo","","",null,null],[5,"clang_index_getObjCProtocolRefListInfo","","",null,null],[5,"clang_index_isEntityObjCContainerKind","","",null,null],[5,"clang_index_setClientContainer","","",null,null],[5,"clang_index_setClientEntity","","",null,null],[5,"clang_isAttribute","","",null,null],[5,"clang_isConstQualifiedType","","",null,null],[5,"clang_isCursorDefinition","","",null,null],[5,"clang_isDeclaration","","",null,null],[5,"clang_isExpression","","",null,null],[5,"clang_isFileMultipleIncludeGuarded","","",null,null],[5,"clang_isFunctionTypeVariadic","","",null,null],[5,"clang_isInvalid","","",null,null],[5,"clang_isPODType","","",null,null],[5,"clang_isPreprocessing","","",null,null],[5,"clang_isReference","","",null,null],[5,"clang_isRestrictQualifiedType","","",null,null],[5,"clang_isStatement","","",null,null],[5,"clang_isTranslationUnit","","",null,null],[5,"clang_isUnexposed","","",null,null],[5,"clang_isVirtualBase","","",null,null],[5,"clang_isVolatileQualifiedType","","",null,null],[5,"clang_loadDiagnostics","","",null,null],[5,"clang_parseTranslationUnit","","",null,null],[5,"clang_parseTranslationUnit2","","",null,null],[5,"clang_parseTranslationUnit2FullArgv","","",null,null],[5,"clang_remap_dispose","","",null,null],[5,"clang_remap_getFilenames","","",null,null],[5,"clang_remap_getNumFiles","","",null,null],[5,"clang_reparseTranslationUnit","","",null,null],[5,"clang_saveTranslationUnit","","",null,null],[5,"clang_sortCodeCompletionResults","","",null,null],[5,"clang_toggleCrashRecovery","","",null,null],[5,"clang_tokenize","","",null,null],[5,"clang_visitChildren","","",null,null],[5,"clang_BlockCommandComment_getArgText","","",null,null],[5,"clang_BlockCommandComment_getCommandName","","",null,null],[5,"clang_BlockCommandComment_getNumArgs","","",null,null],[5,"clang_BlockCommandComment_getParagraph","","",null,null],[5,"clang_Comment_getChild","","",null,null],[5,"clang_Comment_getKind","","",null,null],[5,"clang_Comment_getNumChildren","","",null,null],[5,"clang_Comment_isWhitespace","","",null,null],[5,"clang_Cursor_getParsedComment","","",null,null],[5,"clang_FullComment_getAsHTML","","",null,null],[5,"clang_FullComment_getAsXML","","",null,null],[5,"clang_HTMLStartTagComment_isSelfClosing","","",null,null],[5,"clang_HTMLStartTag_getAttrName","","",null,null],[5,"clang_HTMLStartTag_getAttrValue","","",null,null],[5,"clang_HTMLStartTag_getNumAttrs","","",null,null],[5,"clang_HTMLTagComment_getAsString","","",null,null],[5,"clang_HTMLTagComment_getTagName","","",null,null],[5,"clang_InlineCommandComment_getArgText","","",null,null],[5,"clang_InlineCommandComment_getCommandName","","",null,null],[5,"clang_InlineCommandComment_getNumArgs","","",null,null],[5,"clang_InlineCommandComment_getRenderKind","","",null,null],[5,"clang_InlineContentComment_hasTrailingNewline","","",null,null],[5,"clang_ParamCommandComment_getDirection","","",null,null],[5,"clang_ParamCommandComment_getParamIndex","","",null,null],[5,"clang_ParamCommandComment_getParamName","","",null,null],[5,"clang_ParamCommandComment_isDirectionExplicit","","",null,null],[5,"clang_ParamCommandComment_isParamIndexValid","","",null,null],[5,"clang_TParamCommandComment_getDepth","","",null,null],[5,"clang_TParamCommandComment_getIndex","","",null,null],[5,"clang_TParamCommandComment_getParamName","","",null,null],[5,"clang_TParamCommandComment_isParamPositionValid","","",null,null],[5,"clang_TextComment_getText","","",null,null],[5,"clang_VerbatimBlockLineComment_getText","","",null,null],[5,"clang_VerbatimLineComment_getText","","",null,null],[0,"support","","Provides helper functionality.",null,null],[3,"Clang","clang_sys::support","A `clang` executable.",null,null],[12,"path","","The path to this `clang` executable.",36,null],[12,"version","","The version of this `clang` executable if it could be parsed.",36,null],[12,"c_search_paths","","The directories searched by this `clang` executable for C headers if they could be parsed.",36,null],[12,"cpp_search_paths","","The directories searched by this `clang` executable for C++ headers if they could be parsed.",36,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"clang"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"find","","Returns a `clang` executable if one can be found.",36,null],[0,"clang_CXCursorSet_contains","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXCursorSet_contains","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXCursorSet_insert","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXCursorSet_insert","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXIndex_getGlobalOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXIndex_getGlobalOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXIndex_setGlobalOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXIndex_setGlobalOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXConstructor_isConvertingConstructor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXConstructor_isConvertingConstructor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXConstructor_isCopyConstructor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXConstructor_isCopyConstructor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXConstructor_isDefaultConstructor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXConstructor_isDefaultConstructor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXConstructor_isMoveConstructor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXConstructor_isMoveConstructor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXField_isMutable","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXField_isMutable","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXMethod_isConst","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXMethod_isConst","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXMethod_isDefaulted","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXMethod_isDefaulted","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXMethod_isPureVirtual","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXMethod_isPureVirtual","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXMethod_isStatic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXMethod_isStatic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CXXMethod_isVirtual","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CXXMethod_isVirtual","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompilationDatabase_dispose","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompilationDatabase_dispose","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompilationDatabase_fromDirectory","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompilationDatabase_fromDirectory","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompilationDatabase_getAllCompileCommands","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompilationDatabase_getAllCompileCommands","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompilationDatabase_getCompileCommands","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompilationDatabase_getCompileCommands","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommand_getArg","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommand_getArg","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommand_getDirectory","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommand_getDirectory","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommand_getFilename","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommand_getFilename","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommand_getMappedSourceContent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommand_getMappedSourceContent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommand_getMappedSourcePath","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommand_getMappedSourcePath","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommand_getNumArgs","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommand_getNumArgs","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommands_dispose","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommands_dispose","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommands_getCommand","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommands_getCommand","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_CompileCommands_getSize","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_CompileCommands_getSize","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_Evaluate","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_Evaluate","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getArgument","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getArgument","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getBriefCommentText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getBriefCommentText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getCXXManglings","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getCXXManglings","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getCommentRange","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getCommentRange","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getMangling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getMangling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getModule","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getModule","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getNumArguments","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getNumArguments","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getNumTemplateArguments","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getNumTemplateArguments","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getObjCDeclQualifiers","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getObjCDeclQualifiers","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getObjCPropertyAttributes","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getObjCPropertyAttributes","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getObjCSelectorIndex","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getObjCSelectorIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getOffsetOfField","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getOffsetOfField","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getRawCommentText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getRawCommentText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getReceiverType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getReceiverType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getSpellingNameRange","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getSpellingNameRange","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getStorageClass","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getStorageClass","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getTemplateArgumentKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getTemplateArgumentKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getTemplateArgumentType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getTemplateArgumentType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getTemplateArgumentUnsignedValue","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getTemplateArgumentUnsignedValue","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getTemplateArgumentValue","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getTemplateArgumentValue","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_hasAttrs","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_hasAttrs","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isAnonymous","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isAnonymous","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isBitField","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isBitField","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isDynamicCall","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isDynamicCall","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isFunctionInlined","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isFunctionInlined","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isMacroBuiltin","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isMacroBuiltin","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isMacroFunctionLike","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isMacroFunctionLike","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isNull","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isNull","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isObjCOptional","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isObjCOptional","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_isVariadic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_isVariadic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_dispose","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_dispose","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_getAsDouble","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_getAsDouble","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_getAsInt","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_getAsInt","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_getAsLongLong","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_getAsLongLong","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_getAsStr","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_getAsStr","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_getAsUnsigned","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_getAsUnsigned","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_getKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_getKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_EvalResult_isUnsignedInt","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_EvalResult_isUnsignedInt","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_File_isEqual","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_File_isEqual","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_IndexAction_create","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_IndexAction_create","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_IndexAction_dispose","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_IndexAction_dispose","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Location_isFromMainFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Location_isFromMainFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Location_isInSystemHeader","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Location_isInSystemHeader","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_getASTFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_getASTFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_getFullName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_getFullName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_getName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_getName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_getNumTopLevelHeaders","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_getNumTopLevelHeaders","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_getParent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_getParent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_getTopLevelHeader","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_getTopLevelHeader","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Module_isSystem","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Module_isSystem","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Range_isNull","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Range_isNull","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getAlignOf","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getAlignOf","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getCXXRefQualifier","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getCXXRefQualifier","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getClassType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getClassType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getNamedType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getNamedType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getNumTemplateArguments","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getNumTemplateArguments","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getObjCEncoding","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getObjCEncoding","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getOffsetOf","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getOffsetOf","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getSizeOf","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getSizeOf","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_getTemplateArgumentAsType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_getTemplateArgumentAsType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Type_visitFields","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Type_visitFields","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_annotateTokens","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_annotateTokens","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteAt","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteAt","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteGetContainerKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteGetContainerKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteGetContainerUSR","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteGetContainerUSR","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteGetContexts","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteGetContexts","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteGetDiagnostic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteGetDiagnostic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteGetNumDiagnostics","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteGetNumDiagnostics","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_codeCompleteGetObjCSelector","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_codeCompleteGetObjCSelector","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_constructUSR_ObjCCategory","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_constructUSR_ObjCCategory","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_constructUSR_ObjCClass","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_constructUSR_ObjCClass","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_constructUSR_ObjCIvar","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_constructUSR_ObjCIvar","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_constructUSR_ObjCMethod","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_constructUSR_ObjCMethod","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_constructUSR_ObjCProperty","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_constructUSR_ObjCProperty","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_constructUSR_ObjCProtocol","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_constructUSR_ObjCProtocol","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_createCXCursorSet","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_createCXCursorSet","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_createIndex","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_createIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_createTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_createTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_createTranslationUnit2","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_createTranslationUnit2","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_createTranslationUnitFromSourceFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_createTranslationUnitFromSourceFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_defaultCodeCompleteOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_defaultCodeCompleteOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_defaultDiagnosticDisplayOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_defaultDiagnosticDisplayOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_defaultEditingTranslationUnitOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_defaultEditingTranslationUnitOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_defaultReparseOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_defaultReparseOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_defaultSaveOptions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_defaultSaveOptions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeCXCursorSet","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeCXCursorSet","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeCXPlatformAvailability","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeCXPlatformAvailability","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeCXTUResourceUsage","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeCXTUResourceUsage","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeCodeCompleteResults","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeCodeCompleteResults","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeDiagnostic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeDiagnostic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeDiagnosticSet","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeDiagnosticSet","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeIndex","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeOverriddenCursors","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeOverriddenCursors","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeSourceRangeList","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeSourceRangeList","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeString","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeString","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeStringSet","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeStringSet","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeTokens","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeTokens","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_disposeTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_disposeTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_enableStackTraces","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_enableStackTraces","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_equalCursors","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_equalCursors","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_equalLocations","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_equalLocations","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_equalRanges","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_equalRanges","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_equalTypes","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_equalTypes","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_executeOnThread","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_executeOnThread","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_findIncludesInFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_findIncludesInFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_findReferencesInFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_findReferencesInFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_formatDiagnostic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_formatDiagnostic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_free","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_free","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getAllSkippedRanges","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getAllSkippedRanges","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getArgType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getArgType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getArrayElementType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getArrayElementType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getArraySize","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getArraySize","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCString","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCString","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCXTUResourceUsage","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCXTUResourceUsage","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCXXAccessSpecifier","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCXXAccessSpecifier","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCanonicalCursor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCanonicalCursor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCanonicalType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCanonicalType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getChildDiagnostics","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getChildDiagnostics","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getClangVersion","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getClangVersion","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionAnnotation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionAnnotation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionAvailability","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionAvailability","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionBriefComment","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionBriefComment","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionChunkCompletionString","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionChunkCompletionString","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionChunkKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionChunkKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionChunkText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionChunkText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionNumAnnotations","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionNumAnnotations","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionParent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionParent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCompletionPriority","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCompletionPriority","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorAvailability","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorAvailability","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorCompletionString","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorCompletionString","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorDefinition","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorDefinition","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorDisplayName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorDisplayName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorExtent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorExtent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorKindSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorKindSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorLanguage","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorLanguage","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorLexicalParent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorLexicalParent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorLinkage","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorLinkage","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorPlatformAvailability","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorPlatformAvailability","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorReferenceNameRange","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorReferenceNameRange","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorReferenced","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorReferenced","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorResultType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorResultType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorSemanticParent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorSemanticParent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorUSR","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorUSR","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getCursorVisibility","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getCursorVisibility","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDeclObjCTypeEncoding","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDeclObjCTypeEncoding","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDefinitionSpellingAndExtent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDefinitionSpellingAndExtent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnostic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnostic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticCategory","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticCategory","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticCategoryName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticCategoryName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticCategoryText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticCategoryText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticFixIt","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticFixIt","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticInSet","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticInSet","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticNumFixIts","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticNumFixIts","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticNumRanges","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticNumRanges","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticOption","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticOption","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticRange","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticRange","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticSetFromTU","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticSetFromTU","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticSeverity","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticSeverity","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getDiagnosticSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getDiagnosticSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getElementType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getElementType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getEnumConstantDeclUnsignedValue","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getEnumConstantDeclUnsignedValue","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getEnumConstantDeclValue","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getEnumConstantDeclValue","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getEnumDeclIntegerType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getEnumDeclIntegerType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getExpansionLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getExpansionLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFieldDeclBitWidth","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFieldDeclBitWidth","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFileLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFileLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFileName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFileName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFileTime","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFileTime","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFileUniqueID","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFileUniqueID","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getFunctionTypeCallingConv","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getFunctionTypeCallingConv","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getIBOutletCollectionType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getIBOutletCollectionType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getIncludedFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getIncludedFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getInclusions","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getInclusions","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getInstantiationLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getInstantiationLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getLocationForOffset","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getLocationForOffset","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getModuleForFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getModuleForFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNullCursor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNullCursor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNullLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNullLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNullRange","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNullRange","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNumArgTypes","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNumArgTypes","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNumCompletionChunks","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNumCompletionChunks","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNumDiagnostics","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNumDiagnostics","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNumDiagnosticsInSet","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNumDiagnosticsInSet","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNumElements","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNumElements","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getNumOverloadedDecls","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getNumOverloadedDecls","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getOverloadedDecl","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getOverloadedDecl","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getOverriddenCursors","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getOverriddenCursors","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getPointeeType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getPointeeType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getPresumedLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getPresumedLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getRange","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getRange","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getRangeEnd","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getRangeEnd","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getRangeStart","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getRangeStart","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getRemappings","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getRemappings","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getRemappingsFromFileList","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getRemappingsFromFileList","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getResultType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getResultType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getSkippedRanges","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getSkippedRanges","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getSpecializedCursorTemplate","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getSpecializedCursorTemplate","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getSpellingLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getSpellingLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTUResourceUsageName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTUResourceUsageName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTemplateCursorKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTemplateCursorKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTokenExtent","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTokenExtent","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTokenKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTokenKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTokenLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTokenLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTokenSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTokenSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTranslationUnitCursor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTranslationUnitCursor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTranslationUnitSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTranslationUnitSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTypeDeclaration","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTypeDeclaration","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTypeKindSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTypeKindSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTypeSpelling","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTypeSpelling","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_getTypedefDeclUnderlyingType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_getTypedefDeclUnderlyingType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_hashCursor","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_hashCursor","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_indexLoc_getCXSourceLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_indexLoc_getCXSourceLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_indexLoc_getFileLocation","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_indexLoc_getFileLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_indexSourceFile","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_indexSourceFile","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_indexSourceFileFullArgv","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_indexSourceFileFullArgv","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_indexTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_indexTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getCXXClassDeclInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getCXXClassDeclInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getClientContainer","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getClientContainer","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getClientEntity","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getClientEntity","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getIBOutletCollectionAttrInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getIBOutletCollectionAttrInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getObjCCategoryDeclInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getObjCCategoryDeclInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getObjCContainerDeclInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getObjCContainerDeclInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getObjCInterfaceDeclInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getObjCInterfaceDeclInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getObjCPropertyDeclInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getObjCPropertyDeclInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_getObjCProtocolRefListInfo","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_getObjCProtocolRefListInfo","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_isEntityObjCContainerKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_isEntityObjCContainerKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_setClientContainer","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_setClientContainer","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_index_setClientEntity","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_index_setClientEntity","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isAttribute","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isAttribute","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isConstQualifiedType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isConstQualifiedType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isCursorDefinition","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isCursorDefinition","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isDeclaration","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isDeclaration","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isExpression","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isExpression","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isFileMultipleIncludeGuarded","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isFileMultipleIncludeGuarded","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isFunctionTypeVariadic","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isFunctionTypeVariadic","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isInvalid","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isInvalid","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isPODType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isPODType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isPreprocessing","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isPreprocessing","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isReference","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isReference","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isRestrictQualifiedType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isRestrictQualifiedType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isStatement","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isStatement","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isUnexposed","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isUnexposed","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isVirtualBase","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isVirtualBase","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_isVolatileQualifiedType","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_isVolatileQualifiedType","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_loadDiagnostics","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_loadDiagnostics","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_parseTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_parseTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_parseTranslationUnit2","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_parseTranslationUnit2","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_parseTranslationUnit2FullArgv","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_parseTranslationUnit2FullArgv","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_remap_dispose","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_remap_dispose","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_remap_getFilenames","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_remap_getFilenames","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_remap_getNumFiles","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_remap_getNumFiles","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_reparseTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_reparseTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_saveTranslationUnit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_saveTranslationUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_sortCodeCompletionResults","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_sortCodeCompletionResults","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_toggleCrashRecovery","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_toggleCrashRecovery","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_tokenize","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_tokenize","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_visitChildren","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_visitChildren","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_BlockCommandComment_getArgText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_BlockCommandComment_getArgText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_BlockCommandComment_getCommandName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_BlockCommandComment_getCommandName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_BlockCommandComment_getNumArgs","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_BlockCommandComment_getNumArgs","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_BlockCommandComment_getParagraph","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_BlockCommandComment_getParagraph","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Comment_getChild","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Comment_getChild","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Comment_getKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Comment_getKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Comment_getNumChildren","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Comment_getNumChildren","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Comment_isWhitespace","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Comment_isWhitespace","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_Cursor_getParsedComment","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_Cursor_getParsedComment","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_FullComment_getAsHTML","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_FullComment_getAsHTML","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_FullComment_getAsXML","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_FullComment_getAsXML","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_HTMLStartTagComment_isSelfClosing","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_HTMLStartTagComment_isSelfClosing","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_HTMLStartTag_getAttrName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_HTMLStartTag_getAttrName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_HTMLStartTag_getAttrValue","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_HTMLStartTag_getAttrValue","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_HTMLStartTag_getNumAttrs","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_HTMLStartTag_getNumAttrs","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_HTMLTagComment_getAsString","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_HTMLTagComment_getAsString","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_HTMLTagComment_getTagName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_HTMLTagComment_getTagName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_InlineCommandComment_getArgText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_InlineCommandComment_getArgText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_InlineCommandComment_getCommandName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_InlineCommandComment_getCommandName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_InlineCommandComment_getNumArgs","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_InlineCommandComment_getNumArgs","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_InlineCommandComment_getRenderKind","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_InlineCommandComment_getRenderKind","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_InlineContentComment_hasTrailingNewline","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_InlineContentComment_hasTrailingNewline","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_ParamCommandComment_getDirection","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_ParamCommandComment_getDirection","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_ParamCommandComment_getParamIndex","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_ParamCommandComment_getParamIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_ParamCommandComment_getParamName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_ParamCommandComment_getParamName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_ParamCommandComment_isDirectionExplicit","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_ParamCommandComment_isDirectionExplicit","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_ParamCommandComment_isParamIndexValid","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_ParamCommandComment_isParamIndexValid","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_TParamCommandComment_getDepth","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_TParamCommandComment_getDepth","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_TParamCommandComment_getIndex","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_TParamCommandComment_getIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_TParamCommandComment_getParamName","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_TParamCommandComment_getParamName","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_TParamCommandComment_isParamPositionValid","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_TParamCommandComment_isParamPositionValid","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_TextComment_getText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_TextComment_getText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_VerbatimBlockLineComment_getText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_VerbatimBlockLineComment_getText","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"clang_VerbatimLineComment_getText","clang_sys","",null,null],[5,"is_loaded","clang_sys::clang_VerbatimLineComment_getText","",null,{"inputs":[],"output":{"name":"bool"}}],[6,"CXClientData","clang_sys","",null,null],[6,"CXCursorVisitor","","",null,null],[6,"CXFieldVisitor","","",null,null],[6,"CXInclusionVisitor","","",null,null],[6,"CXAvailabilityKind","","",null,null],[6,"CXCallingConv","","",null,null],[6,"CXChildVisitResult","","",null,null],[6,"CXCommentInlineCommandRenderKind","","",null,null],[6,"CXCommentKind","","",null,null],[6,"CXCommentParamPassDirection","","",null,null],[6,"CXCompilationDatabase_Error","","",null,null],[6,"CXCompletionChunkKind","","",null,null],[6,"CXCursorKind","","",null,null],[6,"CXCursor_ExceptionSpecificationKind","","",null,null],[6,"CXDiagnosticSeverity","","",null,null],[6,"CXErrorCode","","",null,null],[6,"CXEvalResultKind","","",null,null],[6,"CXIdxAttrKind","","",null,null],[6,"CXIdxEntityCXXTemplateKind","","",null,null],[6,"CXIdxEntityKind","","",null,null],[6,"CXIdxEntityLanguage","","",null,null],[6,"CXIdxEntityRefKind","","",null,null],[6,"CXIdxObjCContainerKind","","",null,null],[6,"CXLanguageKind","","",null,null],[6,"CXLinkageKind","","",null,null],[6,"CXLoadDiag_Error","","",null,null],[6,"CXRefQualifierKind","","",null,null],[6,"CXResult","","",null,null],[6,"CXSaveError","","",null,null],[6,"CXTUResourceUsageKind","","",null,null],[6,"CXTemplateArgumentKind","","",null,null],[6,"CXTokenKind","","",null,null],[6,"CXTypeKind","","",null,null],[6,"CXTypeLayoutError","","",null,null],[6,"CXVisibilityKind","","",null,null],[6,"CXVisitorResult","","",null,null],[6,"CX_CXXAccessSpecifier","","",null,null],[6,"CX_StorageClass","","",null,null],[6,"CXCompilationDatabase","","",null,null],[6,"CXCompileCommand","","",null,null],[6,"CXCompileCommands","","",null,null],[6,"CXCompletionString","","",null,null],[6,"CXCursorSet","","",null,null],[6,"CXDiagnostic","","",null,null],[6,"CXDiagnosticSet","","",null,null],[6,"CXEvalResult","","",null,null],[6,"CXFile","","",null,null],[6,"CXIdxClientASTFile","","",null,null],[6,"CXIdxClientContainer","","",null,null],[6,"CXIdxClientEntity","","",null,null],[6,"CXIdxClientFile","","",null,null],[6,"CXIndex","","",null,null],[6,"CXIndexAction","","",null,null],[6,"CXModule","","",null,null],[6,"CXRemapping","","",null,null],[6,"CXTranslationUnit","","",null,null],[17,"CXAvailability_Available","","",null,null],[17,"CXAvailability_Deprecated","","",null,null],[17,"CXAvailability_NotAvailable","","",null,null],[17,"CXAvailability_NotAccessible","","",null,null],[17,"CXCallingConv_Default","","",null,null],[17,"CXCallingConv_C","","",null,null],[17,"CXCallingConv_X86StdCall","","",null,null],[17,"CXCallingConv_X86FastCall","","",null,null],[17,"CXCallingConv_X86ThisCall","","",null,null],[17,"CXCallingConv_X86Pascal","","",null,null],[17,"CXCallingConv_AAPCS","","",null,null],[17,"CXCallingConv_AAPCS_VFP","","",null,null],[17,"CXCallingConv_X86RegCall","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCallingConv_IntelOclBicc","","",null,null],[17,"CXCallingConv_Win64","","",null,null],[17,"CXCallingConv_X86_64Win64","","",null,null],[17,"CXCallingConv_X86_64SysV","","",null,null],[17,"CXCallingConv_X86VectorCall","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCallingConv_Swift","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCallingConv_PreserveMost","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCallingConv_PreserveAll","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCallingConv_Invalid","","",null,null],[17,"CXCallingConv_Unexposed","","",null,null],[17,"CXChildVisit_Break","","",null,null],[17,"CXChildVisit_Continue","","",null,null],[17,"CXChildVisit_Recurse","","",null,null],[17,"CXCommentInlineCommandRenderKind_Normal","","",null,null],[17,"CXCommentInlineCommandRenderKind_Bold","","",null,null],[17,"CXCommentInlineCommandRenderKind_Monospaced","","",null,null],[17,"CXCommentInlineCommandRenderKind_Emphasized","","",null,null],[17,"CXComment_Null","","",null,null],[17,"CXComment_Text","","",null,null],[17,"CXComment_InlineCommand","","",null,null],[17,"CXComment_HTMLStartTag","","",null,null],[17,"CXComment_HTMLEndTag","","",null,null],[17,"CXComment_Paragraph","","",null,null],[17,"CXComment_BlockCommand","","",null,null],[17,"CXComment_ParamCommand","","",null,null],[17,"CXComment_TParamCommand","","",null,null],[17,"CXComment_VerbatimBlockCommand","","",null,null],[17,"CXComment_VerbatimBlockLine","","",null,null],[17,"CXComment_VerbatimLine","","",null,null],[17,"CXComment_FullComment","","",null,null],[17,"CXCommentParamPassDirection_In","","",null,null],[17,"CXCommentParamPassDirection_Out","","",null,null],[17,"CXCommentParamPassDirection_InOut","","",null,null],[17,"CXCompilationDatabase_NoError","","",null,null],[17,"CXCompilationDatabase_CanNotLoadDatabase","","",null,null],[17,"CXCompletionChunk_Optional","","",null,null],[17,"CXCompletionChunk_TypedText","","",null,null],[17,"CXCompletionChunk_Text","","",null,null],[17,"CXCompletionChunk_Placeholder","","",null,null],[17,"CXCompletionChunk_Informative","","",null,null],[17,"CXCompletionChunk_CurrentParameter","","",null,null],[17,"CXCompletionChunk_LeftParen","","",null,null],[17,"CXCompletionChunk_RightParen","","",null,null],[17,"CXCompletionChunk_LeftBracket","","",null,null],[17,"CXCompletionChunk_RightBracket","","",null,null],[17,"CXCompletionChunk_LeftBrace","","",null,null],[17,"CXCompletionChunk_RightBrace","","",null,null],[17,"CXCompletionChunk_LeftAngle","","",null,null],[17,"CXCompletionChunk_RightAngle","","",null,null],[17,"CXCompletionChunk_Comma","","",null,null],[17,"CXCompletionChunk_ResultType","","",null,null],[17,"CXCompletionChunk_Colon","","",null,null],[17,"CXCompletionChunk_SemiColon","","",null,null],[17,"CXCompletionChunk_Equal","","",null,null],[17,"CXCompletionChunk_HorizontalSpace","","",null,null],[17,"CXCompletionChunk_VerticalSpace","","",null,null],[17,"CXCursor_UnexposedDecl","","",null,null],[17,"CXCursor_StructDecl","","",null,null],[17,"CXCursor_UnionDecl","","",null,null],[17,"CXCursor_ClassDecl","","",null,null],[17,"CXCursor_EnumDecl","","",null,null],[17,"CXCursor_FieldDecl","","",null,null],[17,"CXCursor_EnumConstantDecl","","",null,null],[17,"CXCursor_FunctionDecl","","",null,null],[17,"CXCursor_VarDecl","","",null,null],[17,"CXCursor_ParmDecl","","",null,null],[17,"CXCursor_ObjCInterfaceDecl","","",null,null],[17,"CXCursor_ObjCCategoryDecl","","",null,null],[17,"CXCursor_ObjCProtocolDecl","","",null,null],[17,"CXCursor_ObjCPropertyDecl","","",null,null],[17,"CXCursor_ObjCIvarDecl","","",null,null],[17,"CXCursor_ObjCInstanceMethodDecl","","",null,null],[17,"CXCursor_ObjCClassMethodDecl","","",null,null],[17,"CXCursor_ObjCImplementationDecl","","",null,null],[17,"CXCursor_ObjCCategoryImplDecl","","",null,null],[17,"CXCursor_TypedefDecl","","",null,null],[17,"CXCursor_CXXMethod","","",null,null],[17,"CXCursor_Namespace","","",null,null],[17,"CXCursor_LinkageSpec","","",null,null],[17,"CXCursor_Constructor","","",null,null],[17,"CXCursor_Destructor","","",null,null],[17,"CXCursor_ConversionFunction","","",null,null],[17,"CXCursor_TemplateTypeParameter","","",null,null],[17,"CXCursor_NonTypeTemplateParameter","","",null,null],[17,"CXCursor_TemplateTemplateParameter","","",null,null],[17,"CXCursor_FunctionTemplate","","",null,null],[17,"CXCursor_ClassTemplate","","",null,null],[17,"CXCursor_ClassTemplatePartialSpecialization","","",null,null],[17,"CXCursor_NamespaceAlias","","",null,null],[17,"CXCursor_UsingDirective","","",null,null],[17,"CXCursor_UsingDeclaration","","",null,null],[17,"CXCursor_TypeAliasDecl","","",null,null],[17,"CXCursor_ObjCSynthesizeDecl","","",null,null],[17,"CXCursor_ObjCDynamicDecl","","",null,null],[17,"CXCursor_CXXAccessSpecifier","","",null,null],[17,"CXCursor_ObjCSuperClassRef","","",null,null],[17,"CXCursor_ObjCProtocolRef","","",null,null],[17,"CXCursor_ObjCClassRef","","",null,null],[17,"CXCursor_TypeRef","","",null,null],[17,"CXCursor_CXXBaseSpecifier","","",null,null],[17,"CXCursor_TemplateRef","","",null,null],[17,"CXCursor_NamespaceRef","","",null,null],[17,"CXCursor_MemberRef","","",null,null],[17,"CXCursor_LabelRef","","",null,null],[17,"CXCursor_OverloadedDeclRef","","",null,null],[17,"CXCursor_VariableRef","","",null,null],[17,"CXCursor_InvalidFile","","",null,null],[17,"CXCursor_NoDeclFound","","",null,null],[17,"CXCursor_NotImplemented","","",null,null],[17,"CXCursor_InvalidCode","","",null,null],[17,"CXCursor_UnexposedExpr","","",null,null],[17,"CXCursor_DeclRefExpr","","",null,null],[17,"CXCursor_MemberRefExpr","","",null,null],[17,"CXCursor_CallExpr","","",null,null],[17,"CXCursor_ObjCMessageExpr","","",null,null],[17,"CXCursor_BlockExpr","","",null,null],[17,"CXCursor_IntegerLiteral","","",null,null],[17,"CXCursor_FloatingLiteral","","",null,null],[17,"CXCursor_ImaginaryLiteral","","",null,null],[17,"CXCursor_StringLiteral","","",null,null],[17,"CXCursor_CharacterLiteral","","",null,null],[17,"CXCursor_ParenExpr","","",null,null],[17,"CXCursor_UnaryOperator","","",null,null],[17,"CXCursor_ArraySubscriptExpr","","",null,null],[17,"CXCursor_BinaryOperator","","",null,null],[17,"CXCursor_CompoundAssignOperator","","",null,null],[17,"CXCursor_ConditionalOperator","","",null,null],[17,"CXCursor_CStyleCastExpr","","",null,null],[17,"CXCursor_CompoundLiteralExpr","","",null,null],[17,"CXCursor_InitListExpr","","",null,null],[17,"CXCursor_AddrLabelExpr","","",null,null],[17,"CXCursor_StmtExpr","","",null,null],[17,"CXCursor_GenericSelectionExpr","","",null,null],[17,"CXCursor_GNUNullExpr","","",null,null],[17,"CXCursor_CXXStaticCastExpr","","",null,null],[17,"CXCursor_CXXDynamicCastExpr","","",null,null],[17,"CXCursor_CXXReinterpretCastExpr","","",null,null],[17,"CXCursor_CXXConstCastExpr","","",null,null],[17,"CXCursor_CXXFunctionalCastExpr","","",null,null],[17,"CXCursor_CXXTypeidExpr","","",null,null],[17,"CXCursor_CXXBoolLiteralExpr","","",null,null],[17,"CXCursor_CXXNullPtrLiteralExpr","","",null,null],[17,"CXCursor_CXXThisExpr","","",null,null],[17,"CXCursor_CXXThrowExpr","","",null,null],[17,"CXCursor_CXXNewExpr","","",null,null],[17,"CXCursor_CXXDeleteExpr","","",null,null],[17,"CXCursor_UnaryExpr","","",null,null],[17,"CXCursor_ObjCStringLiteral","","",null,null],[17,"CXCursor_ObjCEncodeExpr","","",null,null],[17,"CXCursor_ObjCSelectorExpr","","",null,null],[17,"CXCursor_ObjCProtocolExpr","","",null,null],[17,"CXCursor_ObjCBridgedCastExpr","","",null,null],[17,"CXCursor_PackExpansionExpr","","",null,null],[17,"CXCursor_SizeOfPackExpr","","",null,null],[17,"CXCursor_LambdaExpr","","",null,null],[17,"CXCursor_ObjCBoolLiteralExpr","","",null,null],[17,"CXCursor_ObjCSelfExpr","","",null,null],[17,"CXCursor_OMPArraySectionExpr","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_ObjCAvailabilityCheckExpr","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_UnexposedStmt","","",null,null],[17,"CXCursor_LabelStmt","","",null,null],[17,"CXCursor_CompoundStmt","","",null,null],[17,"CXCursor_CaseStmt","","",null,null],[17,"CXCursor_DefaultStmt","","",null,null],[17,"CXCursor_IfStmt","","",null,null],[17,"CXCursor_SwitchStmt","","",null,null],[17,"CXCursor_WhileStmt","","",null,null],[17,"CXCursor_DoStmt","","",null,null],[17,"CXCursor_ForStmt","","",null,null],[17,"CXCursor_GotoStmt","","",null,null],[17,"CXCursor_IndirectGotoStmt","","",null,null],[17,"CXCursor_ContinueStmt","","",null,null],[17,"CXCursor_BreakStmt","","",null,null],[17,"CXCursor_ReturnStmt","","",null,null],[17,"CXCursor_AsmStmt","","Duplicate of `CXCursor_GccAsmStmt`.",null,null],[17,"CXCursor_ObjCAtTryStmt","","",null,null],[17,"CXCursor_ObjCAtCatchStmt","","",null,null],[17,"CXCursor_ObjCAtFinallyStmt","","",null,null],[17,"CXCursor_ObjCAtThrowStmt","","",null,null],[17,"CXCursor_ObjCAtSynchronizedStmt","","",null,null],[17,"CXCursor_ObjCAutoreleasePoolStmt","","",null,null],[17,"CXCursor_ObjCForCollectionStmt","","",null,null],[17,"CXCursor_CXXCatchStmt","","",null,null],[17,"CXCursor_CXXTryStmt","","",null,null],[17,"CXCursor_CXXForRangeStmt","","",null,null],[17,"CXCursor_SEHTryStmt","","",null,null],[17,"CXCursor_SEHExceptStmt","","",null,null],[17,"CXCursor_SEHFinallyStmt","","",null,null],[17,"CXCursor_MSAsmStmt","","",null,null],[17,"CXCursor_NullStmt","","",null,null],[17,"CXCursor_DeclStmt","","",null,null],[17,"CXCursor_OMPParallelDirective","","",null,null],[17,"CXCursor_OMPSimdDirective","","",null,null],[17,"CXCursor_OMPForDirective","","",null,null],[17,"CXCursor_OMPSectionsDirective","","",null,null],[17,"CXCursor_OMPSectionDirective","","",null,null],[17,"CXCursor_OMPSingleDirective","","",null,null],[17,"CXCursor_OMPParallelForDirective","","",null,null],[17,"CXCursor_OMPParallelSectionsDirective","","",null,null],[17,"CXCursor_OMPTaskDirective","","",null,null],[17,"CXCursor_OMPMasterDirective","","",null,null],[17,"CXCursor_OMPCriticalDirective","","",null,null],[17,"CXCursor_OMPTaskyieldDirective","","",null,null],[17,"CXCursor_OMPBarrierDirective","","",null,null],[17,"CXCursor_OMPTaskwaitDirective","","",null,null],[17,"CXCursor_OMPFlushDirective","","",null,null],[17,"CXCursor_SEHLeaveStmt","","",null,null],[17,"CXCursor_OMPOrderedDirective","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_OMPAtomicDirective","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_OMPForSimdDirective","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_OMPParallelForSimdDirective","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_OMPTargetDirective","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_OMPTeamsDirective","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_OMPTaskgroupDirective","","Only produced by `libclang` 3.7 and later.",null,null],[17,"CXCursor_OMPCancellationPointDirective","","Only produced by `libclang` 3.7 and later.",null,null],[17,"CXCursor_OMPCancelDirective","","Only produced by `libclang` 3.7 and later.",null,null],[17,"CXCursor_OMPTargetDataDirective","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_OMPTaskLoopDirective","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_OMPTaskLoopSimdDirective","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_OMPDistributeDirective","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_OMPTargetEnterDataDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPTargetExitDataDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPTargetParallelDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPTargetParallelForDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPTargetUpdateDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPDistributeParallelForDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPDistributeParallelForSimdDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPDistributeSimdDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPTargetParallelForSimdDirective","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_OMPTargetSimdDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTeamsDistributeDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTeamsDistributeSimdDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTeamsDistributeParallelForSimdDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTeamsDistributeParallelForDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTargetTeamsDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTargetTeamsDistributeDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTargetTeamsDistributeParallelForDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTargetTeamsDistributeParallelForSimdDirective","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OMPTargetTeamsDistributeSimdDirective","","Only producer by `libclang` 4.0 and later.",null,null],[17,"CXCursor_TranslationUnit","","",null,null],[17,"CXCursor_UnexposedAttr","","",null,null],[17,"CXCursor_IBActionAttr","","",null,null],[17,"CXCursor_IBOutletAttr","","",null,null],[17,"CXCursor_IBOutletCollectionAttr","","",null,null],[17,"CXCursor_CXXFinalAttr","","",null,null],[17,"CXCursor_CXXOverrideAttr","","",null,null],[17,"CXCursor_AnnotateAttr","","",null,null],[17,"CXCursor_AsmLabelAttr","","",null,null],[17,"CXCursor_PackedAttr","","",null,null],[17,"CXCursor_PureAttr","","",null,null],[17,"CXCursor_ConstAttr","","",null,null],[17,"CXCursor_NoDuplicateAttr","","",null,null],[17,"CXCursor_CUDAConstantAttr","","",null,null],[17,"CXCursor_CUDADeviceAttr","","",null,null],[17,"CXCursor_CUDAGlobalAttr","","",null,null],[17,"CXCursor_CUDAHostAttr","","",null,null],[17,"CXCursor_CUDASharedAttr","","Only produced by `libclang` 3.6 and later.",null,null],[17,"CXCursor_VisibilityAttr","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_DLLExport","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_DLLImport","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_PreprocessingDirective","","",null,null],[17,"CXCursor_MacroDefinition","","",null,null],[17,"CXCursor_MacroExpansion","","Duplicate of `CXCursor_MacroInstantiation`.",null,null],[17,"CXCursor_InclusionDirective","","",null,null],[17,"CXCursor_ModuleImportDecl","","",null,null],[17,"CXCursor_TypeAliasTemplateDecl","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXCursor_StaticAssert","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXCursor_FriendDecl","","Only produced by `libclang` 4.0 and later.",null,null],[17,"CXCursor_OverloadCandidate","","Only produced by `libclang` 3.7 and later.",null,null],[17,"CXCursor_ExceptionSpecificationKind_None","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_DynamicNone","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_Dynamic","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_MSAny","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_BasicNoexcept","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_ComputedNoexcept","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_Unevaluated","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_Uninstantiated","","",null,null],[17,"CXCursor_ExceptionSpecificationKind_Unparsed","","",null,null],[17,"CXDiagnostic_Ignored","","",null,null],[17,"CXDiagnostic_Note","","",null,null],[17,"CXDiagnostic_Warning","","",null,null],[17,"CXDiagnostic_Error","","",null,null],[17,"CXDiagnostic_Fatal","","",null,null],[17,"CXError_Success","","",null,null],[17,"CXError_Failure","","",null,null],[17,"CXError_Crashed","","",null,null],[17,"CXError_InvalidArguments","","",null,null],[17,"CXError_ASTReadError","","",null,null],[17,"CXEval_UnExposed","","",null,null],[17,"CXEval_Int","","",null,null],[17,"CXEval_Float","","",null,null],[17,"CXEval_ObjCStrLiteral","","",null,null],[17,"CXEval_StrLiteral","","",null,null],[17,"CXEval_CFStr","","",null,null],[17,"CXEval_Other","","",null,null],[17,"CXIdxAttr_Unexposed","","",null,null],[17,"CXIdxAttr_IBAction","","",null,null],[17,"CXIdxAttr_IBOutlet","","",null,null],[17,"CXIdxAttr_IBOutletCollection","","",null,null],[17,"CXIdxEntity_NonTemplate","","",null,null],[17,"CXIdxEntity_Template","","",null,null],[17,"CXIdxEntity_TemplatePartialSpecialization","","",null,null],[17,"CXIdxEntity_TemplateSpecialization","","",null,null],[17,"CXIdxEntity_Unexposed","","",null,null],[17,"CXIdxEntity_Typedef","","",null,null],[17,"CXIdxEntity_Function","","",null,null],[17,"CXIdxEntity_Variable","","",null,null],[17,"CXIdxEntity_Field","","",null,null],[17,"CXIdxEntity_EnumConstant","","",null,null],[17,"CXIdxEntity_ObjCClass","","",null,null],[17,"CXIdxEntity_ObjCProtocol","","",null,null],[17,"CXIdxEntity_ObjCCategory","","",null,null],[17,"CXIdxEntity_ObjCInstanceMethod","","",null,null],[17,"CXIdxEntity_ObjCClassMethod","","",null,null],[17,"CXIdxEntity_ObjCProperty","","",null,null],[17,"CXIdxEntity_ObjCIvar","","",null,null],[17,"CXIdxEntity_Enum","","",null,null],[17,"CXIdxEntity_Struct","","",null,null],[17,"CXIdxEntity_Union","","",null,null],[17,"CXIdxEntity_CXXClass","","",null,null],[17,"CXIdxEntity_CXXNamespace","","",null,null],[17,"CXIdxEntity_CXXNamespaceAlias","","",null,null],[17,"CXIdxEntity_CXXStaticVariable","","",null,null],[17,"CXIdxEntity_CXXStaticMethod","","",null,null],[17,"CXIdxEntity_CXXInstanceMethod","","",null,null],[17,"CXIdxEntity_CXXConstructor","","",null,null],[17,"CXIdxEntity_CXXDestructor","","",null,null],[17,"CXIdxEntity_CXXConversionFunction","","",null,null],[17,"CXIdxEntity_CXXTypeAlias","","",null,null],[17,"CXIdxEntity_CXXInterface","","",null,null],[17,"CXIdxEntityLang_None","","",null,null],[17,"CXIdxEntityLang_C","","",null,null],[17,"CXIdxEntityLang_ObjC","","",null,null],[17,"CXIdxEntityLang_CXX","","",null,null],[17,"CXIdxEntityLang_Swift","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXIdxEntityRef_Direct","","",null,null],[17,"CXIdxEntityRef_Implicit","","",null,null],[17,"CXIdxObjCContainer_ForwardRef","","",null,null],[17,"CXIdxObjCContainer_Interface","","",null,null],[17,"CXIdxObjCContainer_Implementation","","",null,null],[17,"CXLanguage_Invalid","","",null,null],[17,"CXLanguage_C","","",null,null],[17,"CXLanguage_ObjC","","",null,null],[17,"CXLanguage_CPlusPlus","","",null,null],[17,"CXLinkage_Invalid","","",null,null],[17,"CXLinkage_NoLinkage","","",null,null],[17,"CXLinkage_Internal","","",null,null],[17,"CXLinkage_UniqueExternal","","",null,null],[17,"CXLinkage_External","","",null,null],[17,"CXLoadDiag_None","","",null,null],[17,"CXLoadDiag_Unknown","","",null,null],[17,"CXLoadDiag_CannotLoad","","",null,null],[17,"CXLoadDiag_InvalidFile","","",null,null],[17,"CXRefQualifier_None","","",null,null],[17,"CXRefQualifier_LValue","","",null,null],[17,"CXRefQualifier_RValue","","",null,null],[17,"CXResult_Success","","",null,null],[17,"CXResult_Invalid","","",null,null],[17,"CXResult_VisitBreak","","",null,null],[17,"CXSaveError_None","","",null,null],[17,"CXSaveError_Unknown","","",null,null],[17,"CXSaveError_TranslationErrors","","",null,null],[17,"CXSaveError_InvalidTU","","",null,null],[17,"CXTUResourceUsage_AST","","",null,null],[17,"CXTUResourceUsage_Identifiers","","",null,null],[17,"CXTUResourceUsage_Selectors","","",null,null],[17,"CXTUResourceUsage_GlobalCompletionResults","","",null,null],[17,"CXTUResourceUsage_SourceManagerContentCache","","",null,null],[17,"CXTUResourceUsage_AST_SideTables","","",null,null],[17,"CXTUResourceUsage_SourceManager_Membuffer_Malloc","","",null,null],[17,"CXTUResourceUsage_SourceManager_Membuffer_MMap","","",null,null],[17,"CXTUResourceUsage_ExternalASTSource_Membuffer_Malloc","","",null,null],[17,"CXTUResourceUsage_ExternalASTSource_Membuffer_MMap","","",null,null],[17,"CXTUResourceUsage_Preprocessor","","",null,null],[17,"CXTUResourceUsage_PreprocessingRecord","","",null,null],[17,"CXTUResourceUsage_SourceManager_DataStructures","","",null,null],[17,"CXTUResourceUsage_Preprocessor_HeaderSearch","","",null,null],[17,"CXTemplateArgumentKind_Null","","",null,null],[17,"CXTemplateArgumentKind_Type","","",null,null],[17,"CXTemplateArgumentKind_Declaration","","",null,null],[17,"CXTemplateArgumentKind_NullPtr","","",null,null],[17,"CXTemplateArgumentKind_Integral","","",null,null],[17,"CXTemplateArgumentKind_Template","","",null,null],[17,"CXTemplateArgumentKind_TemplateExpansion","","",null,null],[17,"CXTemplateArgumentKind_Expression","","",null,null],[17,"CXTemplateArgumentKind_Pack","","",null,null],[17,"CXTemplateArgumentKind_Invalid","","",null,null],[17,"CXToken_Punctuation","","",null,null],[17,"CXToken_Keyword","","",null,null],[17,"CXToken_Identifier","","",null,null],[17,"CXToken_Literal","","",null,null],[17,"CXToken_Comment","","",null,null],[17,"CXType_Invalid","","",null,null],[17,"CXType_Unexposed","","",null,null],[17,"CXType_Void","","",null,null],[17,"CXType_Bool","","",null,null],[17,"CXType_Char_U","","",null,null],[17,"CXType_UChar","","",null,null],[17,"CXType_Char16","","",null,null],[17,"CXType_Char32","","",null,null],[17,"CXType_UShort","","",null,null],[17,"CXType_UInt","","",null,null],[17,"CXType_ULong","","",null,null],[17,"CXType_ULongLong","","",null,null],[17,"CXType_UInt128","","",null,null],[17,"CXType_Char_S","","",null,null],[17,"CXType_SChar","","",null,null],[17,"CXType_WChar","","",null,null],[17,"CXType_Short","","",null,null],[17,"CXType_Int","","",null,null],[17,"CXType_Long","","",null,null],[17,"CXType_LongLong","","",null,null],[17,"CXType_Int128","","",null,null],[17,"CXType_Float","","",null,null],[17,"CXType_Double","","",null,null],[17,"CXType_LongDouble","","",null,null],[17,"CXType_NullPtr","","",null,null],[17,"CXType_Overload","","",null,null],[17,"CXType_Dependent","","",null,null],[17,"CXType_ObjCId","","",null,null],[17,"CXType_ObjCClass","","",null,null],[17,"CXType_ObjCSel","","",null,null],[17,"CXType_Float128","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXType_Half","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_Complex","","",null,null],[17,"CXType_Pointer","","",null,null],[17,"CXType_BlockPointer","","",null,null],[17,"CXType_LValueReference","","",null,null],[17,"CXType_RValueReference","","",null,null],[17,"CXType_Record","","",null,null],[17,"CXType_Enum","","",null,null],[17,"CXType_Typedef","","",null,null],[17,"CXType_ObjCInterface","","",null,null],[17,"CXType_ObjCObjectPointer","","",null,null],[17,"CXType_FunctionNoProto","","",null,null],[17,"CXType_FunctionProto","","",null,null],[17,"CXType_ConstantArray","","",null,null],[17,"CXType_Vector","","",null,null],[17,"CXType_IncompleteArray","","",null,null],[17,"CXType_VariableArray","","",null,null],[17,"CXType_DependentSizedArray","","",null,null],[17,"CXType_MemberPointer","","",null,null],[17,"CXType_Auto","","Only produced by `libclang` 3.8 and later.",null,null],[17,"CXType_Elaborated","","Only produced by `libclang` 3.9 and later.",null,null],[17,"CXType_Pipe","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dArrayRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dBufferRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dDepthRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayDepthRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dMSAARO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayMSAARO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dMSAADepthRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayMSAADepthRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage3dRO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dArrayWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dBufferWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dDepthWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayDepthWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dMSAAWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayMSAAWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dMSAADepthWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayMSAADepthWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage3dWO","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dArrayRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage1dBufferRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dDepthRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayDepthRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dMSAARW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayMSAARW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dMSAADepthRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage2dArrayMSAADepthRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLImage3dRW","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLSampler","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLEvent","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLQueue","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXType_OCLReserveID","","Only produced by `libclang` 5.0 and later.",null,null],[17,"CXTypeLayoutError_Invalid","","",null,null],[17,"CXTypeLayoutError_Incomplete","","",null,null],[17,"CXTypeLayoutError_Dependent","","",null,null],[17,"CXTypeLayoutError_NotConstantSize","","",null,null],[17,"CXTypeLayoutError_InvalidFieldName","","",null,null],[17,"CXVisibility_Invalid","","",null,null],[17,"CXVisibility_Hidden","","",null,null],[17,"CXVisibility_Protected","","",null,null],[17,"CXVisibility_Default","","",null,null],[17,"CXVisit_Break","","",null,null],[17,"CXVisit_Continue","","",null,null],[17,"CX_CXXInvalidAccessSpecifier","","",null,null],[17,"CX_CXXPublic","","",null,null],[17,"CX_CXXProtected","","",null,null],[17,"CX_CXXPrivate","","",null,null],[17,"CX_SC_Invalid","","",null,null],[17,"CX_SC_None","","",null,null],[17,"CX_SC_Extern","","",null,null],[17,"CX_SC_Static","","",null,null],[17,"CX_SC_PrivateExtern","","",null,null],[17,"CX_SC_OpenCLWorkGroupLocal","","",null,null],[17,"CX_SC_Auto","","",null,null],[17,"CX_SC_Register","","",null,null],[17,"CXCodeComplete_IncludeMacros","","",null,null],[17,"CXCodeComplete_IncludeCodePatterns","","",null,null],[17,"CXCodeComplete_IncludeBriefComments","","",null,null],[17,"CXCompletionContext_Unexposed","","",null,null],[17,"CXCompletionContext_AnyType","","",null,null],[17,"CXCompletionContext_AnyValue","","",null,null],[17,"CXCompletionContext_ObjCObjectValue","","",null,null],[17,"CXCompletionContext_ObjCSelectorValue","","",null,null],[17,"CXCompletionContext_CXXClassTypeValue","","",null,null],[17,"CXCompletionContext_DotMemberAccess","","",null,null],[17,"CXCompletionContext_ArrowMemberAccess","","",null,null],[17,"CXCompletionContext_ObjCPropertyAccess","","",null,null],[17,"CXCompletionContext_EnumTag","","",null,null],[17,"CXCompletionContext_UnionTag","","",null,null],[17,"CXCompletionContext_StructTag","","",null,null],[17,"CXCompletionContext_ClassTag","","",null,null],[17,"CXCompletionContext_Namespace","","",null,null],[17,"CXCompletionContext_NestedNameSpecifier","","",null,null],[17,"CXCompletionContext_ObjCInterface","","",null,null],[17,"CXCompletionContext_ObjCProtocol","","",null,null],[17,"CXCompletionContext_ObjCCategory","","",null,null],[17,"CXCompletionContext_ObjCInstanceMessage","","",null,null],[17,"CXCompletionContext_ObjCClassMessage","","",null,null],[17,"CXCompletionContext_ObjCSelectorName","","",null,null],[17,"CXCompletionContext_MacroName","","",null,null],[17,"CXCompletionContext_NaturalLanguage","","",null,null],[17,"CXCompletionContext_Unknown","","",null,null],[17,"CXDiagnostic_DisplaySourceLocation","","",null,null],[17,"CXDiagnostic_DisplayColumn","","",null,null],[17,"CXDiagnostic_DisplaySourceRanges","","",null,null],[17,"CXDiagnostic_DisplayOption","","",null,null],[17,"CXDiagnostic_DisplayCategoryId","","",null,null],[17,"CXDiagnostic_DisplayCategoryName","","",null,null],[17,"CXGlobalOpt_None","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForIndexing","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForEditing","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForAll","","",null,null],[17,"CXIdxDeclFlag_Skipped","","",null,null],[17,"CXIndexOptNone","","",null,null],[17,"CXIndexOptSuppressRedundantRefs","","",null,null],[17,"CXIndexOptIndexFunctionLocalSymbols","","",null,null],[17,"CXIndexOptIndexImplicitTemplateInstantiations","","",null,null],[17,"CXIndexOptSuppressWarnings","","",null,null],[17,"CXIndexOptSkipParsedBodiesInSession","","",null,null],[17,"CXNameRange_WantQualifier","","",null,null],[17,"CXNameRange_WantTemplateArgs","","",null,null],[17,"CXNameRange_WantSinglePiece","","",null,null],[17,"CXObjCDeclQualifier_None","","",null,null],[17,"CXObjCDeclQualifier_In","","",null,null],[17,"CXObjCDeclQualifier_Inout","","",null,null],[17,"CXObjCDeclQualifier_Out","","",null,null],[17,"CXObjCDeclQualifier_Bycopy","","",null,null],[17,"CXObjCDeclQualifier_Byref","","",null,null],[17,"CXObjCDeclQualifier_Oneway","","",null,null],[17,"CXObjCPropertyAttr_noattr","","",null,null],[17,"CXObjCPropertyAttr_readonly","","",null,null],[17,"CXObjCPropertyAttr_getter","","",null,null],[17,"CXObjCPropertyAttr_assign","","",null,null],[17,"CXObjCPropertyAttr_readwrite","","",null,null],[17,"CXObjCPropertyAttr_retain","","",null,null],[17,"CXObjCPropertyAttr_copy","","",null,null],[17,"CXObjCPropertyAttr_nonatomic","","",null,null],[17,"CXObjCPropertyAttr_setter","","",null,null],[17,"CXObjCPropertyAttr_atomic","","",null,null],[17,"CXObjCPropertyAttr_weak","","",null,null],[17,"CXObjCPropertyAttr_strong","","",null,null],[17,"CXObjCPropertyAttr_unsafe_unretained","","",null,null],[17,"CXObjCPropertyAttr_class","","",null,null],[17,"CXReparse_None","","",null,null],[17,"CXSaveTranslationUnit_None","","",null,null],[17,"CXTranslationUnit_None","","",null,null],[17,"CXTranslationUnit_DetailedPreprocessingRecord","","",null,null],[17,"CXTranslationUnit_Incomplete","","",null,null],[17,"CXTranslationUnit_PrecompiledPreamble","","",null,null],[17,"CXTranslationUnit_CacheCompletionResults","","",null,null],[17,"CXTranslationUnit_ForSerialization","","",null,null],[17,"CXTranslationUnit_CXXChainedPCH","","",null,null],[17,"CXTranslationUnit_SkipFunctionBodies","","",null,null],[17,"CXTranslationUnit_IncludeBriefCommentsInCodeCompletion","","",null,null],[17,"CXTranslationUnit_CreatePreambleOnFirstParse","","",null,null],[17,"CXTranslationUnit_KeepGoing","","",null,null],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"partial_cmp","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"option"}}],[11,"lt","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"le","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"gt","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"ge","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"cmp","","",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"ordering"}}],[11,"hash","","",37,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",37,{"inputs":[],"output":{"name":"cxcodecomplete_flags"}}],[11,"all","","Returns the set containing all flags.",37,{"inputs":[],"output":{"name":"cxcodecomplete_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",37,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",37,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",37,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitor_assign","","Adds the set of flags.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",37,{"inputs":[{"name":"self"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",37,{"inputs":[{"name":"self"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"extend","","",37,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",37,{"inputs":[{"name":"t"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"cxcompletioncontext"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"option"}}],[11,"lt","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"le","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"gt","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"ge","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"cmp","","",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"ordering"}}],[11,"hash","","",38,null],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",38,{"inputs":[],"output":{"name":"cxcompletioncontext"}}],[11,"all","","Returns the set containing all flags.",38,{"inputs":[],"output":{"name":"cxcompletioncontext"}}],[11,"bits","","Returns the raw value of the flags currently stored.",38,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",38,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",38,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxcompletioncontext"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitor_assign","","Adds the set of flags.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitxor_assign","","Toggles the set of flags.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"sub_assign","","Disables all flags enabled in the set.",38,{"inputs":[{"name":"self"},{"name":"cxcompletioncontext"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",38,{"inputs":[{"name":"self"}],"output":{"name":"cxcompletioncontext"}}],[11,"extend","","",38,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",38,{"inputs":[{"name":"t"}],"output":{"name":"cxcompletioncontext"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"option"}}],[11,"lt","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"le","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"gt","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"ge","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"cmp","","",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"ordering"}}],[11,"hash","","",39,null],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",39,{"inputs":[],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"all","","Returns the set containing all flags.",39,{"inputs":[],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",39,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",39,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",39,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitor_assign","","Adds the set of flags.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitxor_assign","","Toggles the set of flags.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"sub_assign","","Disables all flags enabled in the set.",39,{"inputs":[{"name":"self"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",39,{"inputs":[{"name":"self"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"extend","","",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",39,{"inputs":[{"name":"t"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"cxglobaloptflags"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"option"}}],[11,"lt","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"le","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"gt","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"ge","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"cmp","","",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"ordering"}}],[11,"hash","","",40,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",40,{"inputs":[],"output":{"name":"cxglobaloptflags"}}],[11,"all","","Returns the set containing all flags.",40,{"inputs":[],"output":{"name":"cxglobaloptflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",40,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",40,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",40,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxglobaloptflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitor_assign","","Adds the set of flags.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",40,{"inputs":[{"name":"self"},{"name":"cxglobaloptflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",40,{"inputs":[{"name":"self"}],"output":{"name":"cxglobaloptflags"}}],[11,"extend","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",40,{"inputs":[{"name":"t"}],"output":{"name":"cxglobaloptflags"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"cmp","","",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"ordering"}}],[11,"hash","","",41,null],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",41,{"inputs":[],"output":{"name":"cxidxdeclinfoflags"}}],[11,"all","","Returns the set containing all flags.",41,{"inputs":[],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",41,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",41,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",41,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitor_assign","","Adds the set of flags.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",41,{"inputs":[{"name":"self"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",41,{"inputs":[{"name":"self"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"extend","","",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"cxindexoptflags"}}],[11,"partial_cmp","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"option"}}],[11,"lt","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"le","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"gt","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"ge","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"cmp","","",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"ordering"}}],[11,"hash","","",42,null],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",42,{"inputs":[],"output":{"name":"cxindexoptflags"}}],[11,"all","","Returns the set containing all flags.",42,{"inputs":[],"output":{"name":"cxindexoptflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",42,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",42,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",42,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxindexoptflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitor_assign","","Adds the set of flags.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",42,{"inputs":[{"name":"self"},{"name":"cxindexoptflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",42,{"inputs":[{"name":"self"}],"output":{"name":"cxindexoptflags"}}],[11,"extend","","",42,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",42,{"inputs":[{"name":"t"}],"output":{"name":"cxindexoptflags"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"cxnamerefflags"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"ordering"}}],[11,"hash","","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",43,{"inputs":[],"output":{"name":"cxnamerefflags"}}],[11,"all","","Returns the set containing all flags.",43,{"inputs":[],"output":{"name":"cxnamerefflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",43,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",43,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",43,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxnamerefflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitor_assign","","Adds the set of flags.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",43,{"inputs":[{"name":"self"},{"name":"cxnamerefflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",43,{"inputs":[{"name":"self"}],"output":{"name":"cxnamerefflags"}}],[11,"extend","","",43,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",43,{"inputs":[{"name":"t"}],"output":{"name":"cxnamerefflags"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"cmp","","",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"ordering"}}],[11,"hash","","",44,null],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",44,{"inputs":[],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"all","","Returns the set containing all flags.",44,{"inputs":[],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",44,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",44,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",44,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitor_assign","","Adds the set of flags.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitxor_assign","","Toggles the set of flags.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"sub_assign","","Disables all flags enabled in the set.",44,{"inputs":[{"name":"self"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",44,{"inputs":[{"name":"self"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"extend","","",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",44,{"inputs":[{"name":"t"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"cmp","","",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"ordering"}}],[11,"hash","","",45,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",45,{"inputs":[],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"all","","Returns the set containing all flags.",45,{"inputs":[],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",45,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",45,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",45,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitor_assign","","Adds the set of flags.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitxor_assign","","Toggles the set of flags.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"sub_assign","","Disables all flags enabled in the set.",45,{"inputs":[{"name":"self"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",45,{"inputs":[{"name":"self"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"extend","","",45,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",45,{"inputs":[{"name":"t"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"cxreparse_flags"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"cmp","","",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"ordering"}}],[11,"hash","","",46,null],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",46,{"inputs":[],"output":{"name":"cxreparse_flags"}}],[11,"all","","Returns the set containing all flags.",46,{"inputs":[],"output":{"name":"cxreparse_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",46,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",46,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",46,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxreparse_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitor_assign","","Adds the set of flags.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",46,{"inputs":[{"name":"self"},{"name":"cxreparse_flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",46,{"inputs":[{"name":"self"}],"output":{"name":"cxreparse_flags"}}],[11,"extend","","",46,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",46,{"inputs":[{"name":"t"}],"output":{"name":"cxreparse_flags"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"cmp","","",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"ordering"}}],[11,"hash","","",47,null],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",47,{"inputs":[],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"all","","Returns the set containing all flags.",47,{"inputs":[],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",47,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",47,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",47,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitor_assign","","Adds the set of flags.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",47,{"inputs":[{"name":"self"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",47,{"inputs":[{"name":"self"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"extend","","",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",47,{"inputs":[{"name":"t"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"cmp","","",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"ordering"}}],[11,"hash","","",48,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",48,{"inputs":[],"output":{"name":"cxtranslationunit_flags"}}],[11,"all","","Returns the set containing all flags.",48,{"inputs":[],"output":{"name":"cxtranslationunit_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",48,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",48,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",48,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitor_assign","","Adds the set of flags.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",48,{"inputs":[{"name":"self"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",48,{"inputs":[{"name":"self"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"extend","","",48,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",48,{"inputs":[{"name":"t"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"cxcodecompleteresults"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"cxcodecompleteresults"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cxcomment"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"cxcomment"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"cxcompletionresult"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"cxcompletionresult"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"cxcursor"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"cxcursor"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"cxcursorandrangevisitor"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"cxcursorandrangevisitor"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"cxfileuniqueid"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"cxfileuniqueid"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"cxidxattrinfo"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"cxidxattrinfo"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"cxidxbaseclassinfo"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"cxidxbaseclassinfo"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"cxidxcxxclassdeclinfo"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"cxidxcxxclassdeclinfo"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"cxidxcontainerinfo"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"cxidxcontainerinfo"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"cxidxdeclinfo"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"cxidxdeclinfo"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"cxidxentityinfo"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"cxidxentityinfo"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"cxidxentityrefinfo"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"cxidxentityrefinfo"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"cxidxiboutletcollectionattrinfo"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"cxidxiboutletcollectionattrinfo"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"cxidximportedastfileinfo"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"cxidximportedastfileinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"cxidxincludedfileinfo"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"cxidxincludedfileinfo"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"cxidxloc"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"cxidxloc"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cxidxobjccategorydeclinfo"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"cxidxobjccategorydeclinfo"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"cxidxobjccontainerdeclinfo"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"cxidxobjccontainerdeclinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"cxidxobjcinterfacedeclinfo"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"cxidxobjcinterfacedeclinfo"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"cxidxobjcpropertydeclinfo"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"cxidxobjcpropertydeclinfo"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"cxidxobjcprotocolrefinfo"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"cxidxobjcprotocolrefinfo"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"cxidxobjcprotocolreflistinfo"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"cxidxobjcprotocolreflistinfo"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"cxplatformavailability"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"cxplatformavailability"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"cxsourcelocation"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"cxsourcelocation"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"cxsourcerange"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"cxsourcerange"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"cxsourcerangelist"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"cxsourcerangelist"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"cxstring"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"cxstring"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"cxstringset"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"cxstringset"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"cxturesourceusage"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"cxturesourceusage"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"cxturesourceusageentry"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"cxturesourceusageentry"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"cxtoken"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"cxtoken"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"cxtype"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"cxtype"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"cxunsavedfile"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"cxunsavedfile"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"cxversion"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"cxversion"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"indexercallbacks"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"indexercallbacks"}}]],"paths":[[3,"CXCodeCompleteResults"],[3,"CXComment"],[3,"CXCompletionResult"],[3,"CXCursor"],[3,"CXCursorAndRangeVisitor"],[3,"CXFileUniqueID"],[3,"CXIdxAttrInfo"],[3,"CXIdxBaseClassInfo"],[3,"CXIdxCXXClassDeclInfo"],[3,"CXIdxContainerInfo"],[3,"CXIdxDeclInfo"],[3,"CXIdxEntityInfo"],[3,"CXIdxEntityRefInfo"],[3,"CXIdxIBOutletCollectionAttrInfo"],[3,"CXIdxImportedASTFileInfo"],[3,"CXIdxIncludedFileInfo"],[3,"CXIdxLoc"],[3,"CXIdxObjCCategoryDeclInfo"],[3,"CXIdxObjCContainerDeclInfo"],[3,"CXIdxObjCInterfaceDeclInfo"],[3,"CXIdxObjCPropertyDeclInfo"],[3,"CXIdxObjCProtocolRefInfo"],[3,"CXIdxObjCProtocolRefListInfo"],[3,"CXPlatformAvailability"],[3,"CXSourceLocation"],[3,"CXSourceRange"],[3,"CXSourceRangeList"],[3,"CXString"],[3,"CXStringSet"],[3,"CXTUResourceUsage"],[3,"CXTUResourceUsageEntry"],[3,"CXToken"],[3,"CXType"],[3,"CXUnsavedFile"],[3,"CXVersion"],[3,"IndexerCallbacks"],[3,"Clang"],[3,"CXCodeComplete_Flags"],[3,"CXCompletionContext"],[3,"CXDiagnosticDisplayOptions"],[3,"CXGlobalOptFlags"],[3,"CXIdxDeclInfoFlags"],[3,"CXIndexOptFlags"],[3,"CXNameRefFlags"],[3,"CXObjCDeclQualifierKind"],[3,"CXObjCPropertyAttrKind"],[3,"CXReparse_Flags"],[3,"CXSaveTranslationUnit_Flags"],[3,"CXTranslationUnit_Flags"]]};
searchIndex["glob"] = {"doc":"Support for matching file paths against Unix shell style patterns.","items":[[3,"Paths","glob","An iterator that yields `Path`s from the filesystem that match a particular pattern.",null,null],[3,"GlobError","","A glob iteration error.",null,null],[3,"PatternError","","A pattern parsing error.",null,null],[12,"pos","","The approximate character index of where the error occurred.",0,null],[12,"msg","","A message describing the error.",0,null],[3,"Pattern","","A compiled Unix shell style pattern.",null,null],[3,"MatchOptions","","Configuration options to modify the behaviour of `Pattern::matches_with(..)`",null,null],[12,"case_sensitive","","Whether or not patterns should be matched in a case-sensitive manner. This currently only considers upper/lower case relationships between ASCII characters, but in future this might be extended to work with Unicode.",1,null],[12,"require_literal_separator","","If this is true then path-component separator characters (e.g. `/` on Posix) must be matched by a literal `/`, rather than by `*` or `?` or `[...]`",1,null],[12,"require_literal_leading_dot","","If this is true then paths that contain components that start with a `.` will not match unless the `.` appears literally in the pattern: `*`, `?`, `**`, or `[...]` will not match. This is useful because such files are conventionally considered hidden on Unix systems and it might be desirable to skip them when listing files.",1,null],[5,"glob","","Return an iterator that produces all the Paths that match the given pattern, which may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"glob_with","","Return an iterator that produces all the Paths that match the given pattern, which may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"},{"name":"matchoptions"}],"output":{"name":"result"}}],[6,"GlobResult","","An alias for a glob iteration result.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"path","","The Path that the error corresponds to.",2,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"error","","The error in question.",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pattern"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"ordering"}}],[11,"hash","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"pattern"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","This function compiles Unix shell style patterns.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"escape","","Escape metacharacters within the given string by surrounding them in brackets. The resulting string will, when compiled into a `Pattern`, match the input string and nothing else.",4,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"matches","","Return if the given `str` matches this `Pattern` using the default match options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches_path","","Return if the given `Path`, when converted to a `str`, matches this `Pattern` using the default match options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"matches_with","","Return if the given `str` matches this `Pattern` using the specified match options.",4,{"inputs":[{"name":"self"},{"name":"str"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"matches_path_with","","Return if the given `Path`, when converted to a `str`, matches this `Pattern` using the specified match options.",4,{"inputs":[{"name":"self"},{"name":"path"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"as_str","","Access the original glob pattern.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"matchoptions"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"matchoptions"}}],[11,"new","","Constructs a new `MatchOptions` with default field values. This is used when calling functions that do not take an explicit `MatchOptions` parameter.",1,{"inputs":[],"output":{"name":"matchoptions"}}]],"paths":[[3,"PatternError"],[3,"MatchOptions"],[3,"GlobError"],[3,"Paths"],[3,"Pattern"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"inputs":[{"name":"t"}],"output":null}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"stat","libc","",null,null],[12,"st_dev","","",0,null],[12,"st_ino","","",0,null],[12,"st_mode","","",0,null],[12,"st_nlink","","",0,null],[12,"st_uid","","",0,null],[12,"st_gid","","",0,null],[12,"st_rdev","","",0,null],[12,"st_size","","",0,null],[12,"st_atime","","",0,null],[12,"st_mtime","","",0,null],[12,"st_ctime","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"tm","","",null,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"chmod","","",null,null],[5,"wchmod","","",null,null],[5,"mkdir","","",null,null],[5,"wrmdir","","",null,null],[5,"fstat","","",null,null],[5,"stat","","",null,null],[5,"wstat","","",null,null],[5,"wutime","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"wopen","","",null,null],[5,"creat","","",null,null],[5,"access","","",null,null],[5,"chdir","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"execvpe","","",null,null],[5,"getcwd","","",null,null],[5,"getpid","","",null,null],[5,"isatty","","",null,null],[5,"lseek","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"unlink","","",null,null],[5,"write","","",null,null],[5,"commit","","",null,null],[5,"get_osfhandle","","",null,null],[5,"open_osfhandle","","",null,null],[5,"setlocale","","",null,null],[5,"wsetlocale","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"c_char","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"wchar_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"off_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"time64_t","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_TEXT","","",null,null],[17,"O_BINARY","","",null,null],[17,"O_NOINHERIT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EILSEQ","","",null,null],[17,"STRUNCATE","","",null,null]],"paths":[[3,"stat"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"tm"]]};
initSearch(searchIndex);
